!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALTERNATIVE_TAGS	patch/bar_tagicons.h	/^	ALTERNATIVE_TAGS,$/;"	e	enum:__anon21
ALT_TAGS_DECORATION	patch/bar_tagicons.h	/^	ALT_TAGS_DECORATION,$/;"	e	enum:__anon21
ALWAYSFULLSCREEN_PATCH	patches.def.h	335;"	d
ALWAYSFULLSCREEN_PATCH	patches.h	335;"	d
ARG_TYPE_FLOAT	patch/ipc/ipc.h	/^  ARG_TYPE_FLOAT = 3,$/;"	e	enum:ArgType
ARG_TYPE_NONE	patch/ipc/ipc.h	/^  ARG_TYPE_NONE = 0,$/;"	e	enum:ArgType
ARG_TYPE_PTR	patch/ipc/ipc.h	/^  ARG_TYPE_PTR = 4,$/;"	e	enum:ArgType
ARG_TYPE_SINT	patch/ipc/ipc.h	/^  ARG_TYPE_SINT = 2,$/;"	e	enum:ArgType
ARG_TYPE_STR	patch/ipc/ipc.h	/^  ARG_TYPE_STR = 5$/;"	e	enum:ArgType
ARG_TYPE_UINT	patch/ipc/ipc.h	/^  ARG_TYPE_UINT = 1,$/;"	e	enum:ArgType
ASPECTRESIZE_PATCH	patches.def.h	329;"	d
ASPECTRESIZE_PATCH	patches.h	329;"	d
ATTACHABOVE_PATCH	patches.def.h	342;"	d
ATTACHABOVE_PATCH	patches.h	342;"	d
ATTACHASIDE_PATCH	patches.def.h	348;"	d
ATTACHASIDE_PATCH	patches.h	348;"	d
ATTACHBELOW_PATCH	patches.def.h	354;"	d
ATTACHBELOW_PATCH	patches.h	354;"	d
ATTACHBOTTOM_PATCH	patches.def.h	359;"	d
ATTACHBOTTOM_PATCH	patches.h	359;"	d
AUTORESIZE_PATCH	patches.def.h	373;"	d
AUTORESIZE_PATCH	patches.h	373;"	d
AUTOSTART_PATCH	patches.def.h	367;"	d
AUTOSTART_PATCH	patches.h	367;"	d
AXIS_LAST	patch/layout_flextile-deluxe.h	/^	AXIS_LAST,$/;"	e	enum:__anon28
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon7	file:
ArgFunction	patch/ipc/ipc.h	/^typedef union ArgFunction {$/;"	u
ArgFunction	patch/ipc/ipc.h	/^} ArgFunction;$/;"	t	typeref:union:ArgFunction
ArgType	patch/ipc/ipc.h	/^typedef enum ArgType {$/;"	g
ArgType	patch/ipc/ipc.h	/^} ArgType;$/;"	t	typeref:enum:ArgType
BARRULES	dwm.c	71;"	d	file:
BARTAB_BORDERS	patch/bar_tabgroups.c	3;"	d	file:
BARTAB_FLOATWEIGHT	patch/bar_tabgroups.c	15;"	d	file:
BARTAB_HIDDENWEIGHT	patch/bar_tabgroups.c	12;"	d	file:
BARTAB_SHOWFLOATING	patch/bar_tabgroups.c	6;"	d	file:
BARTAB_STACKWEIGHT	patch/bar_tabgroups.c	9;"	d	file:
BAR_ACTIVETAGINDICATORBAR_ALT1_PATCH	patches.def.h	166;"	d
BAR_ACTIVETAGINDICATORBAR_ALT1_PATCH	patches.h	166;"	d
BAR_ACTIVETAGINDICATORBAR_PATCH	patches.def.h	160;"	d
BAR_ACTIVETAGINDICATORBAR_PATCH	patches.h	160;"	d
BAR_ALIGN_CENTER	dwm.c	/^	BAR_ALIGN_CENTER,$/;"	e	enum:__anon6	file:
BAR_ALIGN_LAST	dwm.c	/^	BAR_ALIGN_LAST$/;"	e	enum:__anon6	file:
BAR_ALIGN_LEFT	dwm.c	/^	BAR_ALIGN_LEFT,$/;"	e	enum:__anon6	file:
BAR_ALIGN_LEFT_CENTER	dwm.c	/^	BAR_ALIGN_LEFT_CENTER,$/;"	e	enum:__anon6	file:
BAR_ALIGN_LEFT_LEFT	dwm.c	/^	BAR_ALIGN_LEFT_LEFT,$/;"	e	enum:__anon6	file:
BAR_ALIGN_LEFT_RIGHT	dwm.c	/^	BAR_ALIGN_LEFT_RIGHT,$/;"	e	enum:__anon6	file:
BAR_ALIGN_NONE	dwm.c	/^	BAR_ALIGN_NONE,$/;"	e	enum:__anon6	file:
BAR_ALIGN_RIGHT	dwm.c	/^	BAR_ALIGN_RIGHT,$/;"	e	enum:__anon6	file:
BAR_ALIGN_RIGHT_CENTER	dwm.c	/^	BAR_ALIGN_RIGHT_CENTER,$/;"	e	enum:__anon6	file:
BAR_ALIGN_RIGHT_LEFT	dwm.c	/^	BAR_ALIGN_RIGHT_LEFT,$/;"	e	enum:__anon6	file:
BAR_ALIGN_RIGHT_RIGHT	dwm.c	/^	BAR_ALIGN_RIGHT_RIGHT,$/;"	e	enum:__anon6	file:
BAR_ALPHA_PATCH	patches.def.h	173;"	d
BAR_ALPHA_PATCH	patches.h	173;"	d
BAR_ALTERNATIVE_TAGS_PATCH	patches.def.h	179;"	d
BAR_ALTERNATIVE_TAGS_PATCH	patches.h	179;"	d
BAR_ALTTAGSDECORATION_PATCH	patches.def.h	185;"	d
BAR_ALTTAGSDECORATION_PATCH	patches.h	185;"	d
BAR_ANYBAR_PATCH	patches.def.h	196;"	d
BAR_ANYBAR_PATCH	patches.h	196;"	d
BAR_AWESOMEBAR_PATCH	patches.def.h	22;"	d
BAR_AWESOMEBAR_PATCH	patches.h	22;"	d
BAR_BORDER_PATCH	patches.def.h	201;"	d
BAR_BORDER_PATCH	patches.h	201;"	d
BAR_CENTEREDWINDOWNAME_PATCH	patches.def.h	208;"	d
BAR_CENTEREDWINDOWNAME_PATCH	patches.h	208;"	d
BAR_CLIENTINDICATOR_PATCH	patches.def.h	215;"	d
BAR_CLIENTINDICATOR_PATCH	patches.h	215;"	d
BAR_COLOR_EMOJI_PATCH	patches.def.h	223;"	d
BAR_COLOR_EMOJI_PATCH	patches.h	223;"	d
BAR_DMENUMATCHTOP_PATCH	patches.def.h	229;"	d
BAR_DMENUMATCHTOP_PATCH	patches.h	229;"	d
BAR_DWMBLOCKS_PATCH	patches.def.h	29;"	d
BAR_DWMBLOCKS_PATCH	patches.h	29;"	d
BAR_EWMHTAGS_PATCH	patches.def.h	243;"	d
BAR_EWMHTAGS_PATCH	patches.h	243;"	d
BAR_EXTRASTATUS_PATCH	patches.def.h	236;"	d
BAR_EXTRASTATUS_PATCH	patches.h	236;"	d
BAR_FANCYBAR_PATCH	patches.def.h	37;"	d
BAR_FANCYBAR_PATCH	patches.h	37;"	d
BAR_FLEXWINTITLE_PATCH	patches.def.h	43;"	d
BAR_FLEXWINTITLE_PATCH	patches.h	43;"	d
BAR_HEIGHT_PATCH	patches.def.h	248;"	d
BAR_HEIGHT_PATCH	patches.h	248;"	d
BAR_HIDEVACANTTAGS_PATCH	patches.def.h	253;"	d
BAR_HIDEVACANTTAGS_PATCH	patches.h	253;"	d
BAR_HOLDBAR_PATCH	patches.def.h	259;"	d
BAR_HOLDBAR_PATCH	patches.h	259;"	d
BAR_IGNORE_XFT_ERRORS_WHEN_DRAWING_TEXT_PATCH	patches.def.h	266;"	d
BAR_IGNORE_XFT_ERRORS_WHEN_DRAWING_TEXT_PATCH	patches.h	266;"	d
BAR_LTSYMBOL_PATCH	patches.def.h	46;"	d
BAR_LTSYMBOL_PATCH	patches.h	46;"	d
BAR_PADDING_PATCH	patches.def.h	271;"	d
BAR_PADDING_PATCH	patches.h	271;"	d
BAR_PANGO_PATCH	patches.def.h	292;"	d
BAR_PANGO_PATCH	patches.h	292;"	d
BAR_POWERLINE_STATUS_PATCH	patches.def.h	64;"	d
BAR_POWERLINE_STATUS_PATCH	patches.h	64;"	d
BAR_POWERLINE_TAGS_PATCH	patches.def.h	69;"	d
BAR_POWERLINE_TAGS_PATCH	patches.h	69;"	d
BAR_POWERLINE_TAGS_SLASH_PATCH	patches.def.h	72;"	d
BAR_POWERLINE_TAGS_SLASH_PATCH	patches.h	72;"	d
BAR_STATUS2D_NO_ALPHA_PATCH	patches.def.h	106;"	d
BAR_STATUS2D_NO_ALPHA_PATCH	patches.h	106;"	d
BAR_STATUS2D_PATCH	patches.def.h	103;"	d
BAR_STATUS2D_PATCH	patches.h	103;"	d
BAR_STATUS2D_XRDB_TERMCOLORS_PATCH	patches.def.h	114;"	d
BAR_STATUS2D_XRDB_TERMCOLORS_PATCH	patches.h	114;"	d
BAR_STATUSBUTTON_PATCH	patches.def.h	90;"	d
BAR_STATUSBUTTON_PATCH	patches.h	90;"	d
BAR_STATUSCMD_PATCH	patches.def.h	96;"	d
BAR_STATUSCMD_PATCH	patches.h	96;"	d
BAR_STATUSCOLORS_PATCH	patches.def.h	299;"	d
BAR_STATUSCOLORS_PATCH	patches.h	299;"	d
BAR_STATUSPADDING_PATCH	patches.def.h	304;"	d
BAR_STATUSPADDING_PATCH	patches.h	304;"	d
BAR_STATUS_PATCH	patches.def.h	85;"	d
BAR_STATUS_PATCH	patches.h	85;"	d
BAR_SYSTRAY_PATCH	patches.def.h	119;"	d
BAR_SYSTRAY_PATCH	patches.h	119;"	d
BAR_TABGROUPS_PATCH	patches.def.h	77;"	d
BAR_TABGROUPS_PATCH	patches.h	77;"	d
BAR_TAGGRID_PATCH	patches.def.h	82;"	d
BAR_TAGGRID_PATCH	patches.h	82;"	d
BAR_TAGS_PATCH	patches.def.h	122;"	d
BAR_TAGS_PATCH	patches.h	122;"	d
BAR_TITLE_LEFT_PAD_PATCH	patches.def.h	149;"	d
BAR_TITLE_LEFT_PAD_PATCH	patches.h	149;"	d
BAR_TITLE_RIGHT_PAD_PATCH	patches.def.h	148;"	d
BAR_TITLE_RIGHT_PAD_PATCH	patches.h	148;"	d
BAR_VTCOLORS_PATCH	patches.def.h	311;"	d
BAR_VTCOLORS_PATCH	patches.h	311;"	d
BAR_WINTITLEACTIONS_PATCH	patches.def.h	320;"	d
BAR_WINTITLEACTIONS_PATCH	patches.h	320;"	d
BAR_WINTITLE_FLOATING_PATCH	patches.def.h	133;"	d
BAR_WINTITLE_FLOATING_PATCH	patches.h	133;"	d
BAR_WINTITLE_HIDDEN_PATCH	patches.def.h	141;"	d
BAR_WINTITLE_HIDDEN_PATCH	patches.h	141;"	d
BAR_WINTITLE_PATCH	patches.def.h	125;"	d
BAR_WINTITLE_PATCH	patches.h	125;"	d
BETWEEN	util.h	9;"	d
BSTACKHORIZ_LAYOUT	patches.def.h	1056;"	d
BSTACKHORIZ_LAYOUT	patches.h	1056;"	d
BSTACK_LAYOUT	patches.def.h	1051;"	d
BSTACK_LAYOUT	patches.h	1051;"	d
BUTTONMASK	dwm.c	72;"	d	file:
Bar	dwm.c	/^struct Bar {$/;"	s	file:
Bar	dwm.c	/^typedef struct Bar Bar;$/;"	t	typeref:struct:Bar	file:
BarArg	dwm.c	/^} BarArg;$/;"	t	typeref:struct:__anon8	file:
BarRule	dwm.c	/^} BarRule;$/;"	t	typeref:struct:__anon9	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon10	file:
Button6	dwm.c	66;"	d	file:
Button7	dwm.c	67;"	d	file:
Button8	dwm.c	68;"	d	file:
Button9	dwm.c	69;"	d	file:
CC	config.mk	/^CC = cc$/;"	m
CENTERED	dwm.c	483;"	d	file:
CENTERED	dwm.c	485;"	d	file:
CENTEREDFLOATINGMASTER_LAYOUT	patches.def.h	1066;"	d
CENTEREDFLOATINGMASTER_LAYOUT	patches.h	1066;"	d
CENTEREDMASTER_LAYOUT	patches.def.h	1061;"	d
CENTEREDMASTER_LAYOUT	patches.h	1061;"	d
CENTER_PATCH	patches.def.h	379;"	d
CENTER_PATCH	patches.h	379;"	d
CENTER_TRANSIENT_WINDOWS_BY_PARENT_PATCH	patches.def.h	396;"	d
CENTER_TRANSIENT_WINDOWS_BY_PARENT_PATCH	patches.h	396;"	d
CENTER_TRANSIENT_WINDOWS_PATCH	patches.def.h	391;"	d
CENTER_TRANSIENT_WINDOWS_PATCH	patches.h	391;"	d
CFACTS_PATCH	patches.def.h	402;"	d
CFACTS_PATCH	patches.h	402;"	d
CFLAGS	config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CLEANMASK	dwm.c	73;"	d	file:
CMDCUSTOMIZE_PATCH	patches.def.h	407;"	d
CMDCUSTOMIZE_PATCH	patches.h	407;"	d
COLUMNS_LAYOUT	patches.def.h	1072;"	d
COLUMNS_LAYOUT	patches.h	1072;"	d
COMBO_PATCH	patches.def.h	414;"	d
COMBO_PATCH	patches.h	414;"	d
COMMANDMODE	patch/keymodes.h	1;"	d
COOL_AUTOSTART_PATCH	patches.def.h	420;"	d
COOL_AUTOSTART_PATCH	patches.h	420;"	d
CPPFLAGS	config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\\"${VERSION}\\" ${XINERAMAFLAGS}$/;"	m
CYCLELAYOUTS_PATCH	patches.def.h	425;"	d
CYCLELAYOUTS_PATCH	patches.h	425;"	d
Client	dwm.c	/^struct Client {$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClientState	dwm.c	/^struct ClientState {$/;"	s	file:
ClientState	dwm.c	/^typedef struct ClientState ClientState;$/;"	t	typeref:struct:ClientState	file:
ClkButton	dwm.c	/^	ClkButton,$/;"	e	enum:__anon5	file:
ClkClientWin	dwm.c	/^	ClkClientWin,$/;"	e	enum:__anon5	file:
ClkLast	dwm.c	/^	ClkLast$/;"	e	enum:__anon5	file:
ClkLtSymbol	dwm.c	/^	ClkLtSymbol,$/;"	e	enum:__anon5	file:
ClkRootWin	dwm.c	/^	ClkRootWin,$/;"	e	enum:__anon5	file:
ClkStatusText	dwm.c	/^	ClkStatusText,$/;"	e	enum:__anon5	file:
ClkTagBar	dwm.c	/^	ClkTagBar,$/;"	e	enum:__anon5	file:
ClkWinTitle	dwm.c	/^	ClkWinTitle,$/;"	e	enum:__anon5	file:
Clr	drw.h	/^typedef XftColor Clr;$/;"	t
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon33
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon33
ColCount	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon33
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon33
ColFloat	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon33
Command	patch/keymodes.h	/^} Command;$/;"	t	typeref:struct:__anon18
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon32
CurIronCross	dwm.c	/^	CurIronCross,$/;"	e	enum:__anon1	file:
CurLast	dwm.c	/^	CurLast$/;"	e	enum:__anon1	file:
CurMove	dwm.c	/^	CurMove,$/;"	e	enum:__anon1	file:
CurNormal	dwm.c	/^	CurNormal,$/;"	e	enum:__anon1	file:
CurResize	dwm.c	/^	CurResize,$/;"	e	enum:__anon1	file:
CurResizeBL	dwm.c	/^	CurResizeBL,$/;"	e	enum:__anon1	file:
CurResizeBR	dwm.c	/^	CurResizeBR,$/;"	e	enum:__anon1	file:
CurResizeHorzArrow	dwm.c	/^	CurResizeHorzArrow,$/;"	e	enum:__anon1	file:
CurResizeTL	dwm.c	/^	CurResizeTL,$/;"	e	enum:__anon1	file:
CurResizeTR	dwm.c	/^	CurResizeTR,$/;"	e	enum:__anon1	file:
CurResizeVertArrow	dwm.c	/^	CurResizeVertArrow,$/;"	e	enum:__anon1	file:
DEBUG	util.h	12;"	d
DEBUG	util.h	14;"	d
DECK_LAYOUT	patches.def.h	1077;"	d
DECK_LAYOUT	patches.h	1077;"	d
DECORATION_HINTS_PATCH	patches.def.h	434;"	d
DECORATION_HINTS_PATCH	patches.h	434;"	d
DEFAULT_SOCKET_PATH	patch/ipc/dwm-msg.c	/^const char *DEFAULT_SOCKET_PATH = "\/tmp\/dwm.sock";$/;"	v
DEFAULT_TAGS	patch/bar_tagicons.h	/^	DEFAULT_TAGS,$/;"	e	enum:__anon21
DRAGCFACT_PATCH	patches.def.h	439;"	d
DRAGCFACT_PATCH	patches.h	439;"	d
DRAGMFACT_PATCH	patches.def.h	446;"	d
DRAGMFACT_PATCH	patches.h	446;"	d
DWINDLE	patch/layout_flextile-deluxe.h	/^	DWINDLE,           \/\/ clients are arranged in fibonacci dwindle mode$/;"	e	enum:__anon28
DWMC_PATCH	patches.def.h	454;"	d
DWMC_PATCH	patches.h	454;"	d
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon34
EMPTYVIEW_PATCH	patches.def.h	461;"	d
EMPTYVIEW_PATCH	patches.h	461;"	d
EXPANDALL	patch/exresize.c	9;"	d	file:
EXPAND_DOWN	patch/exresize.c	4;"	d	file:
EXPAND_LEFT	patch/exresize.c	1;"	d	file:
EXPAND_RIGHT	patch/exresize.c	2;"	d	file:
EXPAND_UP	patch/exresize.c	3;"	d	file:
EXRESIZE_PATCH	patches.def.h	468;"	d
EXRESIZE_PATCH	patches.h	468;"	d
EX_C	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_E	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_N	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_NE	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_NW	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_S	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_SE	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_SW	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
EX_W	patch/exresize.h	/^enum { EX_NW, EX_N, EX_NE, EX_W, EX_C, EX_E, EX_SW, EX_S, EX_SE };$/;"	e	enum:__anon30
FAKEFULLSCREEN	dwm.c	493;"	d	file:
FAKEFULLSCREEN	dwm.c	495;"	d	file:
FAKEFULLSCREEN_CLIENT_PATCH	patches.def.h	485;"	d
FAKEFULLSCREEN_CLIENT_PATCH	patches.h	485;"	d
FAKEFULLSCREEN_PATCH	patches.def.h	476;"	d
FAKEFULLSCREEN_PATCH	patches.h	476;"	d
FIBONACCI_DWINDLE_LAYOUT	patches.def.h	1082;"	d
FIBONACCI_DWINDLE_LAYOUT	patches.h	1082;"	d
FIBONACCI_SPIRAL_LAYOUT	patches.def.h	1087;"	d
FIBONACCI_SPIRAL_LAYOUT	patches.h	1087;"	d
FLEXTILE_DELUXE_LAYOUT	dwm.c	50;"	d	file:
FLEXTILE_DELUXE_LAYOUT	patches.def.h	1093;"	d
FLEXTILE_DELUXE_LAYOUT	patches.h	1093;"	d
FLEXWINTITLE_BORDERS	patch/bar_flexwintitle.c	3;"	d	file:
FLEXWINTITLE_FLOATWEIGHT	patch/bar_flexwintitle.c	18;"	d	file:
FLEXWINTITLE_HIDDENWEIGHT	patch/bar_flexwintitle.c	15;"	d	file:
FLEXWINTITLE_MASTERWEIGHT	patch/bar_flexwintitle.c	9;"	d	file:
FLEXWINTITLE_SHOWFLOATING	patch/bar_flexwintitle.c	6;"	d	file:
FLEXWINTITLE_STACKWEIGHT	patch/bar_flexwintitle.c	12;"	d	file:
FLOATING	dwm.c	481;"	d	file:
FLOATING_MASTER	patch/layout_flextile-deluxe.h	/^	FLOATING_MASTER,                   \/\/ (fake) floating master$/;"	e	enum:__anon27
FLOATING_MASTER_FIXED	patch/layout_flextile-deluxe.h	/^	FLOATING_MASTER_FIXED,             \/\/ (fake) fixed floating master$/;"	e	enum:__anon27
FLOATPOS_PATCH	patches.def.h	493;"	d
FLOATPOS_PATCH	patches.h	493;"	d
FLOATPOS_RESPECT_GAPS_PATCH	patches.def.h	496;"	d
FLOATPOS_RESPECT_GAPS_PATCH	patches.h	496;"	d
FOCUSADJACENTTAG_PATCH	patches.def.h	503;"	d
FOCUSADJACENTTAG_PATCH	patches.h	503;"	d
FOCUSMASTER_PATCH	patches.def.h	508;"	d
FOCUSMASTER_PATCH	patches.h	508;"	d
FOCUSONCLICK_PATCH	patches.def.h	513;"	d
FOCUSONCLICK_PATCH	patches.h	513;"	d
FOCUSONNETACTIVE_PATCH	patches.def.h	526;"	d
FOCUSONNETACTIVE_PATCH	patches.h	526;"	d
FOCUSURGENT_PATCH	patches.def.h	520;"	d
FOCUSURGENT_PATCH	patches.h	520;"	d
FORCE_EXPANDALL	patch/exresize.c	11;"	d	file:
FORCE_VSPLIT	config.def.h	234;"	d
FORCE_VSPLIT	config.h	234;"	d
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
FSIGNAL_PATCH	patches.def.h	533;"	d
FSIGNAL_PATCH	patches.h	533;"	d
FULLSCREEN_PATCH	patches.def.h	539;"	d
FULLSCREEN_PATCH	patches.h	539;"	d
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
GAPPLESSGRID	patch/layout_flextile-deluxe.h	/^	GAPPLESSGRID,      \/\/ clients are arranged in a gappless grid (original formula)$/;"	e	enum:__anon28
GAPPLESSGRID_ALT1	patch/layout_flextile-deluxe.h	/^	GAPPLESSGRID_ALT1, \/\/ clients are arranged in a gappless grid (alt. 1, fills rows first)$/;"	e	enum:__anon28
GAPPLESSGRID_ALT2	patch/layout_flextile-deluxe.h	/^	GAPPLESSGRID_ALT2, \/\/ clients are arranged in a gappless grid (alt. 2, fills columns first)$/;"	e	enum:__anon28
GAPPLESSGRID_LAYOUT	patches.def.h	1098;"	d
GAPPLESSGRID_LAYOUT	patches.h	1098;"	d
GETINC	patch/stacker.h	1;"	d
GRIDMODE	patch/layout_flextile-deluxe.h	/^	GRIDMODE,          \/\/ clients are arranged in a grid$/;"	e	enum:__anon28
GRIDMODE_LAYOUT	patches.def.h	1103;"	d
GRIDMODE_LAYOUT	patches.h	1103;"	d
GRP_FLOAT	patch/bar_flexwintitle.c	/^enum { GRP_NOSELECTION, GRP_MASTER, GRP_STACK1, GRP_STACK2, GRP_FLOAT, GRP_HIDDEN };$/;"	e	enum:__anon24	file:
GRP_HIDDEN	patch/bar_flexwintitle.c	/^enum { GRP_NOSELECTION, GRP_MASTER, GRP_STACK1, GRP_STACK2, GRP_FLOAT, GRP_HIDDEN };$/;"	e	enum:__anon24	file:
GRP_MASTER	patch/bar_flexwintitle.c	/^enum { GRP_NOSELECTION, GRP_MASTER, GRP_STACK1, GRP_STACK2, GRP_FLOAT, GRP_HIDDEN };$/;"	e	enum:__anon24	file:
GRP_NOSELECTION	patch/bar_flexwintitle.c	/^enum { GRP_NOSELECTION, GRP_MASTER, GRP_STACK1, GRP_STACK2, GRP_FLOAT, GRP_HIDDEN };$/;"	e	enum:__anon24	file:
GRP_STACK1	patch/bar_flexwintitle.c	/^enum { GRP_NOSELECTION, GRP_MASTER, GRP_STACK1, GRP_STACK2, GRP_FLOAT, GRP_HIDDEN };$/;"	e	enum:__anon24	file:
GRP_STACK2	patch/bar_flexwintitle.c	/^enum { GRP_NOSELECTION, GRP_MASTER, GRP_STACK1, GRP_STACK2, GRP_FLOAT, GRP_HIDDEN };$/;"	e	enum:__anon24	file:
HEIGHT	dwm.c	95;"	d	file:
HIDDEN	dwm.c	107;"	d	file:
HIDDEN	patch/bar_flexwintitle.c	213;"	d	file:
HIDDEN	patch/bar_tabgroups.c	83;"	d	file:
HORIZGRID	patch/layout_flextile-deluxe.h	/^	HORIZGRID,         \/\/ clients are arranged in a horizontal grid$/;"	e	enum:__anon28
HORIZGRID_LAYOUT	patches.def.h	1108;"	d
HORIZGRID_LAYOUT	patches.h	1108;"	d
INC	patch/stacker.h	2;"	d
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC} ${YAJLINC} ${PANGOINC}$/;"	m
INDICATOR_BOTTOM_BAR	patch/bar_indicators.h	/^	INDICATOR_BOTTOM_BAR,$/;"	e	enum:__anon17
INDICATOR_BOTTOM_BAR_SLIM	patch/bar_indicators.h	/^	INDICATOR_BOTTOM_BAR_SLIM,$/;"	e	enum:__anon17
INDICATOR_BOX	patch/bar_indicators.h	/^	INDICATOR_BOX,$/;"	e	enum:__anon17
INDICATOR_BOX_FULL	patch/bar_indicators.h	/^	INDICATOR_BOX_FULL,$/;"	e	enum:__anon17
INDICATOR_BOX_WIDER	patch/bar_indicators.h	/^	INDICATOR_BOX_WIDER,$/;"	e	enum:__anon17
INDICATOR_CLIENT_DOTS	patch/bar_indicators.h	/^	INDICATOR_CLIENT_DOTS,$/;"	e	enum:__anon17
INDICATOR_NONE	patch/bar_indicators.h	/^	INDICATOR_NONE,$/;"	e	enum:__anon17
INDICATOR_PLUS	patch/bar_indicators.h	/^	INDICATOR_PLUS,$/;"	e	enum:__anon17
INDICATOR_PLUS_AND_LARGER_SQUARE	patch/bar_indicators.h	/^	INDICATOR_PLUS_AND_LARGER_SQUARE,$/;"	e	enum:__anon17
INDICATOR_PLUS_AND_SQUARE	patch/bar_indicators.h	/^	INDICATOR_PLUS_AND_SQUARE,$/;"	e	enum:__anon17
INDICATOR_RIGHT_TAGS	patch/bar_indicators.h	/^	INDICATOR_RIGHT_TAGS,$/;"	e	enum:__anon17
INDICATOR_TOP_BAR	patch/bar_indicators.h	/^	INDICATOR_TOP_BAR,$/;"	e	enum:__anon17
INDICATOR_TOP_BAR_SLIM	patch/bar_indicators.h	/^	INDICATOR_TOP_BAR_SLIM,$/;"	e	enum:__anon17
INDICATOR_TOP_LEFT_LARGER_SQUARE	patch/bar_indicators.h	/^	INDICATOR_TOP_LEFT_LARGER_SQUARE,$/;"	e	enum:__anon17
INDICATOR_TOP_LEFT_SQUARE	patch/bar_indicators.h	/^	INDICATOR_TOP_LEFT_SQUARE,$/;"	e	enum:__anon17
INPLACEROTATE_PATCH	patches.def.h	545;"	d
INPLACEROTATE_PATCH	patches.h	545;"	d
INSERTMODE	patch/keymodes.h	2;"	d
INSETS_PATCH	patches.def.h	551;"	d
INSETS_PATCH	patches.h	551;"	d
INTERSECT	dwm.c	75;"	d	file:
INTERSECT	dwm.c	78;"	d	file:
IPCCOMMAND	patch/ipc/ipc.h	15;"	d
IPCClient	patch/ipc/IPCClient.h	/^struct IPCClient {$/;"	s
IPCClient	patch/ipc/IPCClient.h	/^typedef struct IPCClient IPCClient;$/;"	t	typeref:struct:IPCClient
IPCClientList	patch/ipc/IPCClient.h	/^typedef IPCClient *IPCClientList;$/;"	t
IPCCommand	patch/ipc/ipc.h	/^typedef struct IPCCommand {$/;"	s
IPCCommand	patch/ipc/ipc.h	/^} IPCCommand;$/;"	t	typeref:struct:IPCCommand
IPCEvent	patch/ipc/ipc.h	/^typedef enum IPCEvent {$/;"	g
IPCEvent	patch/ipc/ipc.h	/^} IPCEvent;$/;"	t	typeref:enum:IPCEvent
IPCMessageType	patch/ipc/dwm-msg.c	/^typedef enum IPCMessageType {$/;"	g	file:
IPCMessageType	patch/ipc/dwm-msg.c	/^} IPCMessageType;$/;"	t	typeref:enum:IPCMessageType	file:
IPCMessageType	patch/ipc/ipc.h	/^typedef enum IPCMessageType {$/;"	g
IPCMessageType	patch/ipc/ipc.h	/^} IPCMessageType;$/;"	t	typeref:enum:IPCMessageType
IPCParsedCommand	patch/ipc/ipc.h	/^typedef struct IPCParsedCommand {$/;"	s
IPCParsedCommand	patch/ipc/ipc.h	/^} IPCParsedCommand;$/;"	t	typeref:struct:IPCParsedCommand
IPCSubscriptionAction	patch/ipc/ipc.h	/^typedef enum IPCSubscriptionAction {$/;"	g
IPCSubscriptionAction	patch/ipc/ipc.h	/^} IPCSubscriptionAction;$/;"	t	typeref:enum:IPCSubscriptionAction
IPC_ACTION_SUBSCRIBE	patch/ipc/ipc.h	/^  IPC_ACTION_SUBSCRIBE = 1$/;"	e	enum:IPCSubscriptionAction
IPC_ACTION_UNSUBSCRIBE	patch/ipc/ipc.h	/^  IPC_ACTION_UNSUBSCRIBE = 0,$/;"	e	enum:IPCSubscriptionAction
IPC_CLIENT_H_	patch/ipc/IPCClient.h	2;"	d
IPC_EVENT_CLIENT_FOCUS_CHANGE	patch/ipc/dwm-msg.c	21;"	d	file:
IPC_EVENT_CLIENT_FOCUS_CHANGE	patch/ipc/ipc.h	/^  IPC_EVENT_CLIENT_FOCUS_CHANGE = 1 << 1,$/;"	e	enum:IPCEvent
IPC_EVENT_FOCUSED_STATE_CHANGE	patch/ipc/dwm-msg.c	25;"	d	file:
IPC_EVENT_FOCUSED_STATE_CHANGE	patch/ipc/ipc.h	/^  IPC_EVENT_FOCUSED_STATE_CHANGE = 1 << 5$/;"	e	enum:IPCEvent
IPC_EVENT_FOCUSED_TITLE_CHANGE	patch/ipc/dwm-msg.c	24;"	d	file:
IPC_EVENT_FOCUSED_TITLE_CHANGE	patch/ipc/ipc.h	/^  IPC_EVENT_FOCUSED_TITLE_CHANGE = 1 << 4,$/;"	e	enum:IPCEvent
IPC_EVENT_LAYOUT_CHANGE	patch/ipc/dwm-msg.c	22;"	d	file:
IPC_EVENT_LAYOUT_CHANGE	patch/ipc/ipc.h	/^  IPC_EVENT_LAYOUT_CHANGE = 1 << 2,$/;"	e	enum:IPCEvent
IPC_EVENT_MONITOR_FOCUS_CHANGE	patch/ipc/dwm-msg.c	23;"	d	file:
IPC_EVENT_MONITOR_FOCUS_CHANGE	patch/ipc/ipc.h	/^  IPC_EVENT_MONITOR_FOCUS_CHANGE = 1 << 3,$/;"	e	enum:IPCEvent
IPC_EVENT_TAG_CHANGE	patch/ipc/dwm-msg.c	20;"	d	file:
IPC_EVENT_TAG_CHANGE	patch/ipc/ipc.h	/^  IPC_EVENT_TAG_CHANGE = 1 << 0,$/;"	e	enum:IPCEvent
IPC_H_	patch/ipc/ipc.h	2;"	d
IPC_MAGIC	patch/ipc/dwm-msg.c	14;"	d	file:
IPC_MAGIC	patch/ipc/ipc.h	11;"	d
IPC_MAGIC_ARR	patch/ipc/dwm-msg.c	16;"	d	file:
IPC_MAGIC_ARR	patch/ipc/ipc.h	12;"	d
IPC_MAGIC_LEN	patch/ipc/dwm-msg.c	18;"	d	file:
IPC_MAGIC_LEN	patch/ipc/ipc.h	13;"	d
IPC_PATCH	patches.def.h	565;"	d
IPC_PATCH	patches.h	565;"	d
IPC_SOCKET_BACKLOG	patch/ipc/ipc.c	/^static const int IPC_SOCKET_BACKLOG = 5;$/;"	v	file:
IPC_TYPE_EVENT	patch/ipc/dwm-msg.c	/^  IPC_TYPE_EVENT = 6$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_EVENT	patch/ipc/ipc.h	/^  IPC_TYPE_EVENT = 6$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_DWM_CLIENT	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_DWM_CLIENT = 4,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_DWM_CLIENT	patch/ipc/ipc.h	/^  IPC_TYPE_GET_DWM_CLIENT = 4,$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_LAYOUTS	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_LAYOUTS = 3,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_LAYOUTS	patch/ipc/ipc.h	/^  IPC_TYPE_GET_LAYOUTS = 3,$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_MONITORS	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_MONITORS = 1,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_MONITORS	patch/ipc/ipc.h	/^  IPC_TYPE_GET_MONITORS = 1,$/;"	e	enum:IPCMessageType
IPC_TYPE_GET_TAGS	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_TAGS = 2,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_TAGS	patch/ipc/ipc.h	/^  IPC_TYPE_GET_TAGS = 2,$/;"	e	enum:IPCMessageType
IPC_TYPE_RUN_COMMAND	patch/ipc/dwm-msg.c	/^  IPC_TYPE_RUN_COMMAND = 0,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_RUN_COMMAND	patch/ipc/ipc.h	/^  IPC_TYPE_RUN_COMMAND = 0,$/;"	e	enum:IPCMessageType
IPC_TYPE_SUBSCRIBE	patch/ipc/dwm-msg.c	/^  IPC_TYPE_SUBSCRIBE = 5,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_SUBSCRIBE	patch/ipc/ipc.h	/^  IPC_TYPE_SUBSCRIBE = 5,$/;"	e	enum:IPCMessageType
ISINC	patch/stacker.h	3;"	d
ISPERMANENT_PATCH	patches.def.h	570;"	d
ISPERMANENT_PATCH	patches.h	570;"	d
ISVISIBLE	dwm.c	83;"	d	file:
ISVISIBLE	dwm.c	86;"	d	file:
ISVISIBLE	dwm.c	88;"	d	file:
ISVISIBLE	dwm.c	90;"	d	file:
ISVISIBLEONTAG	dwm.c	82;"	d	file:
ISVISIBLEONTAG	dwm.c	85;"	d	file:
IS_FORCED	patch/exresize.c	7;"	d	file:
IS_SET	patch/exresize.c	6;"	d	file:
Inset	dwm.c	/^} Inset;$/;"	t	typeref:struct:__anon14	file:
KEYMODES_PATCH	patches.def.h	576;"	d
KEYMODES_PATCH	patches.h	576;"	d
KILLUNSEL_PATCH	patches.def.h	581;"	d
KILLUNSEL_PATCH	patches.h	581;"	d
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon11	file:
LAYOUT	patch/layout_flextile-deluxe.h	/^	LAYOUT,       \/\/ controls overall layout arrangement \/ split$/;"	e	enum:__anon26
LAYOUT_LAST	patch/layout_flextile-deluxe.h	/^	LAYOUT_LAST,$/;"	e	enum:__anon27
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LEFT_TO_RIGHT	patch/layout_flextile-deluxe.h	/^	LEFT_TO_RIGHT,     \/\/ clients are arranged horizontally$/;"	e	enum:__anon28
LENGTH	dwm.c	92;"	d	file:
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}  ${XRENDER} ${MPDCLIENT} ${XEXTLIB} ${XCBLIBS} ${KVMLIB} ${PANGOLIB} ${YAJLLIBS}$/;"	m
LOSEFULLSCREEN_PATCH	patches.def.h	590;"	d
LOSEFULLSCREEN_PATCH	patches.h	590;"	d
LTAXIS_LAST	patch/layout_flextile-deluxe.h	/^	LTAXIS_LAST,$/;"	e	enum:__anon26
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon13	file:
LayoutArranger	patch/layout_flextile-deluxe.c	/^} LayoutArranger;$/;"	t	typeref:struct:__anon19	file:
LayoutPreset	dwm.c	/^} LayoutPreset;$/;"	t	typeref:struct:__anon12	file:
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MASTER	patch/layout_flextile-deluxe.h	/^	MASTER,       \/\/ indicates the tile arrangement for the master area$/;"	e	enum:__anon26
MAX	util.h	4;"	d
MAXIMIZE_PATCH	patches.def.h	596;"	d
MAXIMIZE_PATCH	patches.h	596;"	d
MAX_MESSAGE_SIZE	patch/ipc/ipc.c	/^static const uint32_t MAX_MESSAGE_SIZE = 1000000;$/;"	v	file:
MDPCONTROL_PATCH	patches.def.h	605;"	d
MDPCONTROL_PATCH	patches.h	605;"	d
MIN	util.h	7;"	d
MOD	patch/stacker.h	5;"	d
MODKEY	config.def.h	254;"	d
MODKEY	config.h	254;"	d
MONITOR_RULES_PATCH	patches.def.h	613;"	d
MONITOR_RULES_PATCH	patches.h	613;"	d
MONOCLE	patch/layout_flextile-deluxe.h	/^	MONOCLE,           \/\/ clients are arranged in deck \/ monocle mode$/;"	e	enum:__anon28
MONOCLESYMBOL_PATCH	patches.def.h	619;"	d
MONOCLESYMBOL_PATCH	patches.h	619;"	d
MONOCLE_LAYOUT	patches.def.h	1123;"	d
MONOCLE_LAYOUT	patches.h	1123;"	d
MOUSEMASK	dwm.c	93;"	d	file:
MOVEPLACE_PATCH	patches.def.h	626;"	d
MOVEPLACE_PATCH	patches.h	626;"	d
MOVERESIZE_PATCH	patches.def.h	631;"	d
MOVERESIZE_PATCH	patches.h	631;"	d
MOVESTACK_PATCH	patches.def.h	636;"	d
MOVESTACK_PATCH	patches.h	636;"	d
MPDHOST	patch/mdpcontrol.c	8;"	d	file:
MPDPORT	patch/mdpcontrol.c	9;"	d	file:
MWM_DECOR_ALL	patch/decorationhints.h	4;"	d
MWM_DECOR_BORDER	patch/decorationhints.h	5;"	d
MWM_DECOR_TITLE	patch/decorationhints.h	6;"	d
MWM_HINTS_DECORATIONS	patch/decorationhints.h	3;"	d
MWM_HINTS_DECORATIONS_FIELD	patch/decorationhints.h	2;"	d
MWM_HINTS_FLAGS_FIELD	patch/decorationhints.h	1;"	d
Manager	patch/bar_systray.h	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon31
Monitor	dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
MonitorRule	dwm.c	/^} MonitorRule;$/;"	t	typeref:struct:__anon16	file:
NOBORDER_PATCH	patches.def.h	641;"	d
NOBORDER_PATCH	patches.h	641;"	d
NODMENU_PATCH	patches.def.h	647;"	d
NODMENU_PATCH	patches.h	647;"	d
NOSWALLOW	dwm.c	498;"	d	file:
NOSWALLOW	dwm.c	501;"	d	file:
NO_MOD_BUTTONS_PATCH	patches.def.h	661;"	d
NO_MOD_BUTTONS_PATCH	patches.h	661;"	d
NO_SPLIT	patch/layout_flextile-deluxe.h	/^	NO_SPLIT,$/;"	e	enum:__anon27
NO_TRANSPARENT_BORDERS_PATCH	patches.def.h	669;"	d
NO_TRANSPARENT_BORDERS_PATCH	patches.h	669;"	d
NROWGRID_LAYOUT	patches.def.h	1113;"	d
NROWGRID_LAYOUT	patches.h	1113;"	d
NUMTAGS	dwm.c	70;"	d	file:
NetActiveWindow	dwm.c	/^	NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon3	file:
NetClientList	dwm.c	/^	NetClientList, NetLast$/;"	e	enum:__anon3	file:
NetCurrentDesktop	dwm.c	/^	NetDesktopNames, NetDesktopViewport, NetNumberOfDesktops, NetCurrentDesktop,$/;"	e	enum:__anon3	file:
NetDesktopNames	dwm.c	/^	NetDesktopNames, NetDesktopViewport, NetNumberOfDesktops, NetCurrentDesktop,$/;"	e	enum:__anon3	file:
NetDesktopViewport	dwm.c	/^	NetDesktopNames, NetDesktopViewport, NetNumberOfDesktops, NetCurrentDesktop,$/;"	e	enum:__anon3	file:
NetLast	dwm.c	/^	NetClientList, NetLast$/;"	e	enum:__anon3	file:
NetNumberOfDesktops	dwm.c	/^	NetDesktopNames, NetDesktopViewport, NetNumberOfDesktops, NetCurrentDesktop,$/;"	e	enum:__anon3	file:
NetSupported	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3	file:
NetSystemTray	dwm.c	/^	NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation,$/;"	e	enum:__anon3	file:
NetSystemTrayOP	dwm.c	/^	NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation,$/;"	e	enum:__anon3	file:
NetSystemTrayOrientation	dwm.c	/^	NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation,$/;"	e	enum:__anon3	file:
NetSystemTrayOrientationHorz	dwm.c	/^	NetSystemTrayVisual, NetWMWindowTypeDock, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon3	file:
NetSystemTrayVisual	dwm.c	/^	NetSystemTrayVisual, NetWMWindowTypeDock, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon3	file:
NetWMCheck	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3	file:
NetWMFullscreen	dwm.c	/^	NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon3	file:
NetWMName	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3	file:
NetWMState	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon3	file:
NetWMWindowType	dwm.c	/^	NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon3	file:
NetWMWindowTypeDock	dwm.c	/^	NetSystemTrayVisual, NetWMWindowTypeDock, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon3	file:
NumTags	dwm.c	/^struct NumTags { char limitexceeded[NUMTAGS > 30 ? -1 : 1]; };$/;"	s	file:
NumTags	dwm.c	/^struct NumTags { char limitexceeded[NUMTAGS > 31 ? -1 : 1]; };$/;"	s	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
ONLYQUITONEMPTY_PATCH	patches.def.h	678;"	d
ONLYQUITONEMPTY_PATCH	patches.h	678;"	d
ONLY_ONE_RULE_MATCH_PATCH	patches.def.h	672;"	d
ONLY_ONE_RULE_MATCH_PATCH	patches.h	672;"	d
OPAQUE	patch/bar_alpha.h	1;"	d
PERMANENT	dwm.c	488;"	d	file:
PERMANENT	dwm.c	490;"	d	file:
PERTAGBAR_PATCH	patches.def.h	689;"	d
PERTAGBAR_PATCH	patches.h	689;"	d
PERTAG_PATCH	patches.def.h	684;"	d
PERTAG_PATCH	patches.h	684;"	d
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
PREVSEL	patch/stacker.h	4;"	d
PUSH_NO_MASTER_PATCH	patches.def.h	702;"	d
PUSH_NO_MASTER_PATCH	patches.h	702;"	d
PUSH_PATCH	patches.def.h	694;"	d
PUSH_PATCH	patches.h	694;"	d
Pertag	dwm.c	/^typedef struct Pertag Pertag;$/;"	t	typeref:struct:Pertag	file:
Pertag	patch/pertag.c	/^struct Pertag {$/;"	s	file:
REORGANIZETAGS_PATCH	patches.def.h	714;"	d
REORGANIZETAGS_PATCH	patches.h	714;"	d
RESETLAYOUT_PATCH	patches.def.h	719;"	d
RESETLAYOUT_PATCH	patches.h	719;"	d
RESIZECORNERS_PATCH	patches.def.h	725;"	d
RESIZECORNERS_PATCH	patches.h	725;"	d
RESIZEPOINT_PATCH	patches.def.h	731;"	d
RESIZEPOINT_PATCH	patches.h	731;"	d
RESTARTSIG_PATCH	patches.def.h	737;"	d
RESTARTSIG_PATCH	patches.h	737;"	d
RIGHTOF	patch/sortscreens.h	1;"	d
ROTATESTACK_PATCH	patches.def.h	742;"	d
ROTATESTACK_PATCH	patches.h	742;"	d
ROUNDED_CORNERS_PATCH	patches.def.h	749;"	d
ROUNDED_CORNERS_PATCH	patches.h	749;"	d
RULE	dwm.c	478;"	d	file:
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon15	file:
SAVEFLOATS_PATCH	patches.def.h	756;"	d
SAVEFLOATS_PATCH	patches.h	756;"	d
SCHEMEFOR	patch/bar_flexwintitle.c	21;"	d	file:
SCRATCHPADS_KEEP_POSITION_AND_SIZE_PATCH	patches.def.h	767;"	d
SCRATCHPADS_KEEP_POSITION_AND_SIZE_PATCH	patches.h	767;"	d
SCRATCHPADS_PATCH	patches.def.h	764;"	d
SCRATCHPADS_PATCH	patches.h	764;"	d
SCRATCHPAD_ALT_1_PATCH	patches.def.h	773;"	d
SCRATCHPAD_ALT_1_PATCH	patches.h	773;"	d
SCRATCHPAD_MASK	patch/scratchpad_alt_1.h	1;"	d
SELECTIVEFAKEFULLSCREEN_PATCH	patches.def.h	780;"	d
SELECTIVEFAKEFULLSCREEN_PATCH	patches.h	780;"	d
SELFRESTART_PATCH	patches.def.h	785;"	d
SELFRESTART_PATCH	patches.h	785;"	d
SENDMON_KEEPFOCUS_PATCH	patches.def.h	790;"	d
SENDMON_KEEPFOCUS_PATCH	patches.h	790;"	d
SETBORDERPX_PATCH	patches.def.h	795;"	d
SETBORDERPX_PATCH	patches.h	795;"	d
SHCMD	config.def.h	264;"	d
SHCMD	config.h	264;"	d
SHIFTVIEW_CLIENTS_PATCH	patches.def.h	805;"	d
SHIFTVIEW_CLIENTS_PATCH	patches.h	805;"	d
SHIFTVIEW_PATCH	patches.def.h	800;"	d
SHIFTVIEW_PATCH	patches.h	800;"	d
SIZEHINTS_PATCH	patches.def.h	815;"	d
SIZEHINTS_PATCH	patches.h	815;"	d
SIZEHINTS_RULED_PATCH	patches.def.h	822;"	d
SIZEHINTS_RULED_PATCH	patches.h	822;"	d
SORTSCREENS_PATCH	patches.def.h	830;"	d
SORTSCREENS_PATCH	patches.h	830;"	d
SPAWNCMD_PATCH	patches.def.h	835;"	d
SPAWNCMD_PATCH	patches.h	835;"	d
SPAWN_CWD_DELIM	dwm.c	62;"	d	file:
SPIRAL	patch/layout_flextile-deluxe.h	/^	SPIRAL,            \/\/ clients are arranged in fibonacci spiral mode$/;"	e	enum:__anon28
SPLIT_CENTERED_HORIZONTAL	patch/layout_flextile-deluxe.h	/^	SPLIT_CENTERED_HORIZONTAL,         \/\/ centered master horizontal split$/;"	e	enum:__anon27
SPLIT_CENTERED_HORIZONTAL_FIXED	patch/layout_flextile-deluxe.h	/^	SPLIT_CENTERED_HORIZONTAL_FIXED,   \/\/ centered master horizontal fixed split$/;"	e	enum:__anon27
SPLIT_CENTERED_VERTICAL	patch/layout_flextile-deluxe.h	/^	SPLIT_CENTERED_VERTICAL,           \/\/ centered master vertical split$/;"	e	enum:__anon27
SPLIT_CENTERED_VERTICAL_FIXED	patch/layout_flextile-deluxe.h	/^	SPLIT_CENTERED_VERTICAL_FIXED,     \/\/ centered master vertical fixed split$/;"	e	enum:__anon27
SPLIT_HORIZONTAL	patch/layout_flextile-deluxe.h	/^	SPLIT_HORIZONTAL,                  \/\/ master stack horizontal split$/;"	e	enum:__anon27
SPLIT_HORIZONTAL_DUAL_STACK	patch/layout_flextile-deluxe.h	/^	SPLIT_HORIZONTAL_DUAL_STACK,       \/\/ master stack vertical split with dual stack$/;"	e	enum:__anon27
SPLIT_HORIZONTAL_DUAL_STACK_FIXED	patch/layout_flextile-deluxe.h	/^	SPLIT_HORIZONTAL_DUAL_STACK_FIXED, \/\/ master stack vertical split with fixed dual stack$/;"	e	enum:__anon27
SPLIT_HORIZONTAL_FIXED	patch/layout_flextile-deluxe.h	/^	SPLIT_HORIZONTAL_FIXED,            \/\/ master stack horizontal fixed split$/;"	e	enum:__anon27
SPLIT_VERTICAL	patch/layout_flextile-deluxe.h	/^	SPLIT_VERTICAL,                    \/\/ master stack vertical split$/;"	e	enum:__anon27
SPLIT_VERTICAL_DUAL_STACK	patch/layout_flextile-deluxe.h	/^	SPLIT_VERTICAL_DUAL_STACK,         \/\/ master stack vertical split with dual stack$/;"	e	enum:__anon27
SPLIT_VERTICAL_DUAL_STACK_FIXED	patch/layout_flextile-deluxe.h	/^	SPLIT_VERTICAL_DUAL_STACK_FIXED,   \/\/ master stack vertical split with fixed dual stack$/;"	e	enum:__anon27
SPLIT_VERTICAL_FIXED	patch/layout_flextile-deluxe.h	/^	SPLIT_VERTICAL_FIXED,              \/\/ master stack vertical fixed split$/;"	e	enum:__anon27
SPTAG	dwm.c	100;"	d	file:
SPTAGMASK	dwm.c	101;"	d	file:
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
STACK	patch/layout_flextile-deluxe.h	/^	STACK,        \/\/ indicates the tile arrangement for the stack area$/;"	e	enum:__anon26
STACK2	patch/layout_flextile-deluxe.h	/^	STACK2,       \/\/ indicates the tile arrangement for the secondary stack area$/;"	e	enum:__anon26
STACKER_PATCH	patches.def.h	845;"	d
STACKER_PATCH	patches.h	845;"	d
STEAM_PATCH	patches.def.h	856;"	d
STEAM_PATCH	patches.h	856;"	d
STICKY_PATCH	patches.def.h	861;"	d
STICKY_PATCH	patches.h	861;"	d
SWALLOW_PATCH	patches.def.h	869;"	d
SWALLOW_PATCH	patches.h	869;"	d
SWAPFOCUS_PATCH	patches.def.h	880;"	d
SWAPFOCUS_PATCH	patches.h	880;"	d
SWAPTAGS_PATCH	patches.def.h	886;"	d
SWAPTAGS_PATCH	patches.h	886;"	d
SWITCHCOL_PATCH	patches.def.h	891;"	d
SWITCHCOL_PATCH	patches.h	891;"	d
SWITCHTAG	dwm.c	505;"	d	file:
SWITCHTAG	dwm.c	507;"	d	file:
SWITCHTAG_PATCH	patches.def.h	909;"	d
SWITCHTAG_PATCH	patches.h	909;"	d
SYSTEM_TRAY_REQUEST_DOCK	patch/bar_systray.h	1;"	d
SchemeFlexActDWDL	dwm.c	/^	SchemeFlexActDWDL,$/;"	e	enum:__anon2	file:
SchemeFlexActFloat	dwm.c	/^	SchemeFlexActFloat,$/;"	e	enum:__anon2	file:
SchemeFlexActGRD1	dwm.c	/^	SchemeFlexActGRD1,$/;"	e	enum:__anon2	file:
SchemeFlexActGRD2	dwm.c	/^	SchemeFlexActGRD2,$/;"	e	enum:__anon2	file:
SchemeFlexActGRDM	dwm.c	/^	SchemeFlexActGRDM,$/;"	e	enum:__anon2	file:
SchemeFlexActGRID	dwm.c	/^	SchemeFlexActGRID,$/;"	e	enum:__anon2	file:
SchemeFlexActHGRD	dwm.c	/^	SchemeFlexActHGRD,$/;"	e	enum:__anon2	file:
SchemeFlexActLTR	dwm.c	/^	SchemeFlexActLTR,$/;"	e	enum:__anon2	file:
SchemeFlexActMONO	dwm.c	/^	SchemeFlexActMONO,$/;"	e	enum:__anon2	file:
SchemeFlexActSPRL	dwm.c	/^	SchemeFlexActSPRL,$/;"	e	enum:__anon2	file:
SchemeFlexActTTB	dwm.c	/^	SchemeFlexActTTB,$/;"	e	enum:__anon2	file:
SchemeFlexInaDWDL	dwm.c	/^	SchemeFlexInaDWDL,$/;"	e	enum:__anon2	file:
SchemeFlexInaFloat	dwm.c	/^	SchemeFlexInaFloat,$/;"	e	enum:__anon2	file:
SchemeFlexInaGRD1	dwm.c	/^	SchemeFlexInaGRD1,$/;"	e	enum:__anon2	file:
SchemeFlexInaGRD2	dwm.c	/^	SchemeFlexInaGRD2,$/;"	e	enum:__anon2	file:
SchemeFlexInaGRDM	dwm.c	/^	SchemeFlexInaGRDM,$/;"	e	enum:__anon2	file:
SchemeFlexInaGRID	dwm.c	/^	SchemeFlexInaGRID,$/;"	e	enum:__anon2	file:
SchemeFlexInaHGRD	dwm.c	/^	SchemeFlexInaHGRD,$/;"	e	enum:__anon2	file:
SchemeFlexInaLTR	dwm.c	/^	SchemeFlexInaLTR,$/;"	e	enum:__anon2	file:
SchemeFlexInaMONO	dwm.c	/^	SchemeFlexInaMONO,$/;"	e	enum:__anon2	file:
SchemeFlexInaSPRL	dwm.c	/^	SchemeFlexInaSPRL,$/;"	e	enum:__anon2	file:
SchemeFlexInaTTB	dwm.c	/^	SchemeFlexInaTTB,$/;"	e	enum:__anon2	file:
SchemeFlexSelDWDL	dwm.c	/^	SchemeFlexSelDWDL,$/;"	e	enum:__anon2	file:
SchemeFlexSelFloat	dwm.c	/^	SchemeFlexSelFloat,$/;"	e	enum:__anon2	file:
SchemeFlexSelGRD1	dwm.c	/^	SchemeFlexSelGRD1,$/;"	e	enum:__anon2	file:
SchemeFlexSelGRD2	dwm.c	/^	SchemeFlexSelGRD2,$/;"	e	enum:__anon2	file:
SchemeFlexSelGRDM	dwm.c	/^	SchemeFlexSelGRDM,$/;"	e	enum:__anon2	file:
SchemeFlexSelGRID	dwm.c	/^	SchemeFlexSelGRID,$/;"	e	enum:__anon2	file:
SchemeFlexSelHGRD	dwm.c	/^	SchemeFlexSelHGRD,$/;"	e	enum:__anon2	file:
SchemeFlexSelLTR	dwm.c	/^	SchemeFlexSelLTR,$/;"	e	enum:__anon2	file:
SchemeFlexSelMONO	dwm.c	/^	SchemeFlexSelMONO,$/;"	e	enum:__anon2	file:
SchemeFlexSelSPRL	dwm.c	/^	SchemeFlexSelSPRL,$/;"	e	enum:__anon2	file:
SchemeFlexSelTTB	dwm.c	/^	SchemeFlexSelTTB,$/;"	e	enum:__anon2	file:
SchemeHid	dwm.c	/^	SchemeHid,$/;"	e	enum:__anon2	file:
SchemeNorm	dwm.c	/^	SchemeNorm,$/;"	e	enum:__anon2	file:
SchemeSel	dwm.c	/^	SchemeSel,$/;"	e	enum:__anon2	file:
SchemeTagsNorm	dwm.c	/^	SchemeTagsNorm,$/;"	e	enum:__anon2	file:
SchemeTagsSel	dwm.c	/^	SchemeTagsSel,$/;"	e	enum:__anon2	file:
SchemeTitleNorm	dwm.c	/^	SchemeTitleNorm,$/;"	e	enum:__anon2	file:
SchemeTitleSel	dwm.c	/^	SchemeTitleSel,$/;"	e	enum:__anon2	file:
SchemeUrg	dwm.c	/^	SchemeUrg,$/;"	e	enum:__anon2	file:
Signal	patch/dwmc.h	/^} Signal;$/;"	t	typeref:struct:__anon25
Signal	patch/fsignal.h	/^} Signal;$/;"	t	typeref:struct:__anon29
Sp	patch/scratchpad.h	/^} Sp;$/;"	t	typeref:struct:__anon23
Systray	patch/bar_systray.h	/^struct Systray {$/;"	s
Systray	patch/bar_systray.h	/^typedef struct Systray Systray;$/;"	t	typeref:struct:Systray
TAGALLMON_PATCH	patches.def.h	919;"	d
TAGALLMON_PATCH	patches.h	919;"	d
TAGALL_PATCH	patches.def.h	914;"	d
TAGALL_PATCH	patches.h	914;"	d
TAGINTOSTACK_ALLMASTER_PATCH	patches.def.h	927;"	d
TAGINTOSTACK_ALLMASTER_PATCH	patches.h	927;"	d
TAGINTOSTACK_ONEMASTER_PATCH	patches.def.h	934;"	d
TAGINTOSTACK_ONEMASTER_PATCH	patches.h	934;"	d
TAGKEYS	config.def.h	255;"	d
TAGKEYS	config.h	255;"	d
TAGMASK	dwm.c	103;"	d	file:
TAGMASK	dwm.c	99;"	d	file:
TAGMONFIXFS_PATCH	patches.def.h	943;"	d
TAGMONFIXFS_PATCH	patches.h	943;"	d
TAGOTHERMONITOR_PATCH	patches.def.h	949;"	d
TAGOTHERMONITOR_PATCH	patches.h	949;"	d
TAGSINDICATOR	patch/bar_indicators.c	3;"	d	file:
TAGSPX	patch/bar_indicators.c	6;"	d	file:
TAGSROWS	patch/bar_indicators.c	9;"	d	file:
TAGSWAPMON_PATCH	patches.def.h	955;"	d
TAGSWAPMON_PATCH	patches.h	955;"	d
TERMINAL	dwm.c	499;"	d	file:
TERMINAL	dwm.c	502;"	d	file:
TEXTW	dwm.c	106;"	d	file:
TEXTWM	dwm.c	105;"	d	file:
TILE_LAYOUT	patches.def.h	1118;"	d
TILE_LAYOUT	patches.h	1118;"	d
TOGGLEFULLSCREEN_PATCH	patches.def.h	960;"	d
TOGGLEFULLSCREEN_PATCH	patches.h	960;"	d
TOP_TO_BOTTOM	patch/layout_flextile-deluxe.h	/^	TOP_TO_BOTTOM,     \/\/ clients are arranged vertically$/;"	e	enum:__anon28
TOTALTAGS	dwm.c	98;"	d	file:
TRANSFER_ALL_PATCH	patches.def.h	972;"	d
TRANSFER_ALL_PATCH	patches.h	972;"	d
TRANSFER_PATCH	patches.def.h	966;"	d
TRANSFER_PATCH	patches.h	966;"	d
TRUNC	patch/stacker.h	6;"	d
TagState	dwm.c	/^struct TagState {$/;"	s	file:
TagState	dwm.c	/^typedef struct TagState TagState;$/;"	t	typeref:struct:TagState	file:
TileArranger	patch/layout_flextile-deluxe.c	/^} TileArranger;$/;"	t	typeref:struct:__anon20	file:
UNEXPAND	patch/exresize.c	10;"	d	file:
UNFLOATVISIBLE_PATCH	patches.def.h	978;"	d
UNFLOATVISIBLE_PATCH	patches.h	978;"	d
UTF_INVALID	drw.c	13;"	d	file:
UTF_SIZ	drw.c	14;"	d	file:
VANITYGAPS_MONOCLE_PATCH	patches.def.h	991;"	d
VANITYGAPS_MONOCLE_PATCH	patches.h	991;"	d
VANITYGAPS_PATCH	patches.def.h	985;"	d
VANITYGAPS_PATCH	patches.h	985;"	d
VERSION	config.mk	/^VERSION = 6.2$/;"	m
VERSION_MAJOR	patch/bar_systray.h	14;"	d
VERSION_MINOR	patch/bar_systray.h	15;"	d
VIEWONTAG_PATCH	patches.def.h	996;"	d
VIEWONTAG_PATCH	patches.h	996;"	d
VIEW_SAME_TAG_GIVES_PREVIOUS_TAG_PATCH	patches.def.h	1004;"	d
VIEW_SAME_TAG_GIVES_PREVIOUS_TAG_PATCH	patches.h	1004;"	d
WARP_PATCH	patches.def.h	1010;"	d
WARP_PATCH	patches.h	1010;"	d
WIDTH	dwm.c	94;"	d	file:
WINDOWROLERULE_PATCH	patches.def.h	1019;"	d
WINDOWROLERULE_PATCH	patches.h	1019;"	d
WINVIEW_PATCH	patches.def.h	1025;"	d
WINVIEW_PATCH	patches.h	1025;"	d
WIN_C	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_E	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_N	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_NE	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_NW	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_S	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_SE	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_SW	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WIN_W	patch/moveplace.h	/^enum { WIN_NW, WIN_N, WIN_NE, WIN_W, WIN_C, WIN_E, WIN_SW, WIN_S, WIN_SE };$/;"	e	enum:__anon22
WMDelete	dwm.c	/^	WMDelete,$/;"	e	enum:__anon4	file:
WMLast	dwm.c	/^	WMLast$/;"	e	enum:__anon4	file:
WMProtocols	dwm.c	/^	WMProtocols,$/;"	e	enum:__anon4	file:
WMState	dwm.c	/^	WMState,$/;"	e	enum:__anon4	file:
WMTakeFocus	dwm.c	/^	WMTakeFocus,$/;"	e	enum:__anon4	file:
WMWindowRole	dwm.c	/^	WMWindowRole,$/;"	e	enum:__anon4	file:
WTYPE	dwm.c	96;"	d	file:
Window	patch/ipc/dwm-msg.c	/^typedef unsigned long Window;$/;"	t	file:
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XCBLIBS	config.mk	/^XCBLIBS = -lX11-xcb -lxcb -lxcb-res$/;"	m
XEMBED_EMBEDDED_NOTIFY	patch/bar_systray.h	5;"	d
XEMBED_EMBEDDED_VERSION	patch/bar_systray.h	16;"	d
XEMBED_FOCUS_IN	patch/bar_systray.h	7;"	d
XEMBED_MAPPED	patch/bar_systray.h	10;"	d
XEMBED_MODALITY_ON	patch/bar_systray.h	8;"	d
XEMBED_WINDOW_ACTIVATE	patch/bar_systray.h	11;"	d
XEMBED_WINDOW_ACTIVATE	patch/bar_systray.h	6;"	d
XEMBED_WINDOW_DEACTIVATE	patch/bar_systray.h	12;"	d
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
XLast	patch/bar_systray.h	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon31
XRDB_LOAD_COLOR	patch/xrdb.h	3;"	d
XRDB_PATCH	patches.def.h	1031;"	d
XRDB_PATCH	patches.h	1031;"	d
XRENDER	config.mk	/^XRENDER = -lXrender$/;"	m
Xembed	patch/bar_systray.h	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon31
XembedInfo	patch/bar_systray.h	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon31
YAJL_DUMPS_H_	patch/ipc/yajl_dumps.h	2;"	d
YARR	patch/ipc/dwm-msg.c	32;"	d	file:
YARR	patch/ipc/yajl_dumps.h	12;"	d
YBOOL	patch/ipc/dwm-msg.c	30;"	d	file:
YBOOL	patch/ipc/yajl_dumps.h	10;"	d
YDOUBLE	patch/ipc/dwm-msg.c	29;"	d	file:
YDOUBLE	patch/ipc/yajl_dumps.h	9;"	d
YINT	patch/ipc/dwm-msg.c	28;"	d	file:
YINT	patch/ipc/yajl_dumps.h	8;"	d
YMAP	patch/ipc/dwm-msg.c	38;"	d	file:
YMAP	patch/ipc/yajl_dumps.h	18;"	d
YNULL	patch/ipc/dwm-msg.c	31;"	d	file:
YNULL	patch/ipc/yajl_dumps.h	11;"	d
YSTR	patch/ipc/dwm-msg.c	27;"	d	file:
YSTR	patch/ipc/yajl_dumps.h	7;"	d
ZOOMFLOATING_PATCH	patches.def.h	1036;"	d
ZOOMFLOATING_PATCH	patches.h	1036;"	d
ZOOMSWAP_PATCH	patches.def.h	1042;"	d
ZOOMSWAP_PATCH	patches.h	1042;"	d
_NET_SYSTEM_TRAY_ORIENTATION_HORZ	patch/bar_systray.h	2;"	d
alignment	dwm.c	/^	int alignment; \/\/ see bar alignment enum$/;"	m	struct:__anon9	file:
alphas	config.def.h	/^static const unsigned int alphas[][3]	= {$/;"	v
alphas	config.h	/^static const unsigned int alphas[][3]	= {$/;"	v
alttag	dwm.c	/^	unsigned int alttag;$/;"	m	struct:Monitor	file:
applyrules	dwm.c	/^applyrules(Client *c)$/;"	f
applysizehints	dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon10	file:
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon11	file:
arg	patch/fsignal.h	/^	const Arg arg;$/;"	m	struct:__anon29
arg	patch/keymodes.h	/^	const Arg arg;$/;"	m	struct:__anon18
arg_types	patch/ipc/ipc.h	/^  ArgType *arg_types;$/;"	m	struct:IPCCommand
arg_types	patch/ipc/ipc.h	/^  ArgType *arg_types;$/;"	m	struct:IPCParsedCommand
argc	patch/ipc/ipc.h	/^  unsigned int argc;$/;"	m	struct:IPCCommand
argc	patch/ipc/ipc.h	/^  unsigned int argc;$/;"	m	struct:IPCParsedCommand
args	patch/ipc/ipc.h	/^  Arg *args;$/;"	m	struct:IPCParsedCommand
arrange	dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon13	file:
arrange	dwm.c	/^arrange(Monitor *m)$/;"	f
arrange	patch/layout_flextile-deluxe.c	/^	void (*arrange)(Monitor *, int, int, int, int, int, int, int);$/;"	m	struct:__anon19	file:
arrange	patch/layout_flextile-deluxe.c	/^	void (*arrange)(Monitor *, int, int, int, int, int, int, int, int, int);$/;"	m	struct:__anon20	file:
arrange_dwindle	patch/layout_flextile-deluxe.c	/^arrange_dwindle(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_fibonacci	patch/layout_flextile-deluxe.c	/^arrange_fibonacci(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai, int s)$/;"	f	file:
arrange_gapplessgrid	patch/layout_flextile-deluxe.c	/^arrange_gapplessgrid(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_gapplessgrid_alt1	patch/layout_flextile-deluxe.c	/^arrange_gapplessgrid_alt1(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_gapplessgrid_alt2	patch/layout_flextile-deluxe.c	/^arrange_gapplessgrid_alt2(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_gridmode	patch/layout_flextile-deluxe.c	/^arrange_gridmode(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_horizgrid	patch/layout_flextile-deluxe.c	/^arrange_horizgrid(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_left_to_right	patch/layout_flextile-deluxe.c	/^arrange_left_to_right(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_monocle	patch/layout_flextile-deluxe.c	/^arrange_monocle(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_spiral	patch/layout_flextile-deluxe.c	/^arrange_spiral(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrange_top_to_bottom	patch/layout_flextile-deluxe.c	/^arrange_top_to_bottom(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n, int an, int ai)$/;"	f	file:
arrangemon	dwm.c	/^arrangemon(Monitor *m)$/;"	f
array_param	patch/ipc/ipc.h	/^  void (*array_param)(const Arg *, int);$/;"	m	union:ArgFunction
aspectresize	patch/aspectresize.c	/^aspectresize(const Arg *arg)$/;"	f
attach	dwm.c	/^attach(Client *c)$/;"	f
attachstack	dwm.c	/^attachstack(Client *c)$/;"	f
attachx	patch/attachx.c	/^attachx(Client *c)$/;"	f
autostart_exec	patch/cool_autostart.c	/^autostart_exec()$/;"	f	file:
autostart_len	patch/cool_autostart.c	/^static size_t autostart_len;$/;"	v	file:
autostart_pids	patch/cool_autostart.c	/^static pid_t *autostart_pids;$/;"	v	file:
autostartblocksh	config.def.h	/^static const char		autostartblocksh[]	= "autostart_blocking.sh";$/;"	v
autostartblocksh	config.h	/^static const char		autostartblocksh[]	= "autostart_blocking.sh";$/;"	v
autostartsh	config.def.h	/^static const char		autostartsh[]		= "autostart.sh";$/;"	v
autostartsh	config.h	/^static const char		autostartsh[]		= "autostart.sh";$/;"	v
bar	dwm.c	/^	Bar *bar;$/;"	m	struct:Monitor	file:
bar	dwm.c	/^	int bar;$/;"	m	struct:__anon9	file:
bar	patch/bar_systray.h	/^	Bar *bar;$/;"	m	struct:Systray
baralpha	config.def.h	/^static const unsigned int 	baralpha	= 0xD0; \/* 208 *\/$/;"	v
baralpha	config.h	/^static const unsigned int 	baralpha	= 0xD0; \/* 208 *\/$/;"	v
barrules	config.def.h	/^static const BarRule barrules[] = {$/;"	v
barrules	config.h	/^static const BarRule barrules[] = {$/;"	v
bartabcalculate	patch/bar_tabgroups.c	/^bartabcalculate($/;"	f
bartabclick	patch/bar_tabgroups.c	/^bartabclick(Monitor *m, Client *c, int passx, int x, int w, int unused, Arg *arg, BarArg *barg)$/;"	f
bartabdraw	patch/bar_tabgroups.c	/^bartabdraw(Monitor *m, Client *c, int unused, int x, int w, int groupactive, Arg *arg, BarArg *barg)$/;"	f
baseh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
basew	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
bh	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	file:
bh	dwm.c	/^static int bh;               \/* bar geometry *\/$/;"	v	file:
borderalpha	config.def.h	/^static const unsigned int 	borderalpha	= OPAQUE; \/* COMPILER MACRO see dwm.c *\/$/;"	v
borderalpha	config.h	/^static const unsigned int 	borderalpha	= OPAQUE; \/* COMPILER MACRO see dwm.c *\/$/;"	v
borderpx	config.def.h	/^static const unsigned int	borderpx		= 3;   \/* border pixel of windows *\/$/;"	v
borderpx	config.h	/^static const unsigned int	borderpx		= 3;   \/* border pixel of windows *\/$/;"	v
borderpx	dwm.c	/^	int borderpx;$/;"	m	struct:Bar	file:
borderpx	dwm.c	/^	unsigned int borderpx;$/;"	m	struct:Monitor	file:
borderscheme	dwm.c	/^	int borderscheme;$/;"	m	struct:Bar	file:
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	file:
bstack	patch/layout_bstack.c	/^bstack(Monitor *m)$/;"	f	file:
bstackhoriz	patch/layout_bstackhoriz.c	/^bstackhoriz(Monitor *m)$/;"	f	file:
buffer	patch/ipc/IPCClient.h	/^  char *buffer;$/;"	m	struct:IPCClient
buffer_size	patch/ipc/IPCClient.h	/^  uint32_t buffer_size;$/;"	m	struct:IPCClient
button	dwm.c	/^	unsigned int button;$/;"	m	struct:__anon10	file:
buttonpress	dwm.c	/^buttonpress(XEvent *e)$/;"	f
buttons	config.def.h	/^static Button buttons[] = {$/;"	v
buttons	config.h	/^static Button buttons[] = {$/;"	v
bw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	file:
bw	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	file:
bx	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	file:
by	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	file:
calc_wintitle_floating	patch/bar_wintitle_floating.c	/^calc_wintitle_floating($/;"	f
calc_wintitle_hidden	patch/bar_wintitle_hidden.c	/^calc_wintitle_hidden($/;"	f
calculate_expand	patch/exresize.c	/^calculate_expand(unsigned char mask, unsigned char curmask,$/;"	f
centeredfloatingmaster	patch/layout_centeredfloatingmaster.c	/^centeredfloatingmaster(Monitor *m)$/;"	f
centeredmaster	patch/layout_centeredmaster.c	/^centeredmaster(Monitor *m)$/;"	f
cfact	dwm.c	/^	float cfact;$/;"	m	struct:Client	file:
checkfloatingrules	patch/sizehints_ruled.c	/^checkfloatingrules(Client *c)$/;"	f
checkotherwm	dwm.c	/^checkotherwm(void)$/;"	f
class	dwm.c	/^	const char *class;$/;"	m	struct:__anon15	file:
cleanup	dwm.c	/^cleanup(void)$/;"	f
cleanupmon	dwm.c	/^cleanupmon(Monitor *mon)$/;"	f
clearcmd	patch/keymodes.c	/^clearcmd(const Arg *arg)$/;"	f
click	dwm.c	/^	unsigned int click;$/;"	m	struct:__anon10	file:
click_awesomebar	patch/bar_awesomebar.c	/^click_awesomebar(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_bartabgroups	patch/bar_tabgroups.c	/^click_bartabgroups(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_fancybar	patch/bar_fancybar.c	/^click_fancybar(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_flexwintitle	patch/bar_flexwintitle.c	/^click_flexwintitle(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_ltsymbol	patch/bar_ltsymbol.c	/^click_ltsymbol(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_pwrl_status	patch/bar_powerline_status.c	/^click_pwrl_status(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_pwrl_tags	patch/bar_powerline_tags.c	/^click_pwrl_tags(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_status	patch/bar_status.c	/^click_status(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_status2d	patch/bar_status2d.c	/^click_status2d(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_statuscmd	patch/bar_statuscmd.c	/^click_statuscmd(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_statuscmd_es	patch/bar_statuscmd.c	/^click_statuscmd_es(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_statuscmd_text	patch/bar_statuscmd.c	/^click_statuscmd_text(Arg *arg, int rel_x, char *text)$/;"	f
click_stbutton	patch/bar_statusbutton.c	/^click_stbutton(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_systray	patch/bar_systray.c	/^click_systray(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_taggrid	patch/bar_taggrid.c	/^click_taggrid(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_tags	patch/bar_tags.c	/^click_tags(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_wintitle	patch/bar_wintitle.c	/^click_wintitle(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_wintitle_floating	patch/bar_wintitle_floating.c	/^click_wintitle_floating(Bar *bar, Arg *arg, BarArg *a)$/;"	f
click_wintitle_hidden	patch/bar_wintitle_hidden.c	/^click_wintitle_hidden(Bar *bar, Arg *arg, BarArg *a)$/;"	f
clickfunc	dwm.c	/^	int (*clickfunc)(Bar *bar, Arg *arg, BarArg *a);$/;"	m	struct:__anon9	file:
clientmessage	dwm.c	/^clientmessage(XEvent *e)$/;"	f
clients	dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	file:
cmap	drw.h	/^	Colormap cmap;$/;"	m	struct:__anon34
cmap	patch/bar_alpha.c	/^static Colormap cmap;$/;"	v	file:
cmd	patch/scratchpad.h	/^       const void *cmd;$/;"	m	struct:__anon23
cmdkeysym	patch/keymodes.h	/^static KeySym cmdkeysym[4];/;"	v
cmdmod	patch/keymodes.h	/^static unsigned int cmdmod[4];$/;"	v
col	patch/layout_columns.c	/^col(Monitor *m)$/;"	f	file:
colors	config.def.h	/^static char *colors[][ColCount] = {$/;"	v
colors	config.h	/^static char *colors[][ColCount] = {$/;"	v
combo	patch/combo.c	/^static int combo = 0;$/;"	v	file:
combotag	patch/combo.c	/^combotag(const Arg *arg)$/;"	f
comboview	patch/combo.c	/^comboview(const Arg *arg)$/;"	f
configure	dwm.c	/^configure(Client *c)$/;"	f
configurenotify	dwm.c	/^configurenotify(XEvent *e)$/;"	f
configurerequest	dwm.c	/^configurerequest(XEvent *e)$/;"	f
connect_to_socket	patch/ipc/dwm-msg.c	/^connect_to_socket()$/;"	f	file:
copyvalidchars	patch/bar_statuscmd.c	/^copyvalidchars(char *text, char *rawtext)$/;"	f
createmon	dwm.c	/^createmon(void)$/;"	f
cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon32
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	file:
curtag	patch/pertag.c	/^	unsigned int curtag, prevtag; \/* current and previous tag *\/$/;"	m	struct:Pertag	file:
cyclelayout	patch/cyclelayouts.c	/^cyclelayout(const Arg *arg)$/;"	f
deck	patch/layout_deck.c	/^deck(Monitor *m)$/;"	f	file:
decksymbols	patch/layout_flextile-deluxe.c	/^decksymbols(Monitor *m, unsigned int n)$/;"	f	file:
decorhints	config.def.h	/^static const int decorhints	= 1;    \/* 1 means respect decoration hints *\/$/;"	v
decorhints	config.h	/^static const int decorhints	= 1;    \/* 1 means respect decoration hints *\/$/;"	v
defaultgaps	patch/vanitygaps.c	/^defaultgaps(const Arg *arg)$/;"	f	file:
depth	drw.h	/^	unsigned int depth;$/;"	m	struct:__anon34
depth	patch/bar_alpha.c	/^static int depth;$/;"	v	file:
destroynotify	dwm.c	/^destroynotify(XEvent *e)$/;"	f
detach	dwm.c	/^detach(Client *c)$/;"	f
detachstack	dwm.c	/^detachstack(Client *c)$/;"	f
die	util.c	/^die(const char *fmt, ...) {$/;"	f
dirtomon	dwm.c	/^dirtomon(int dir)$/;"	f
dmenucmd	config.def.h	/^static const char *dmenucmd[] = {$/;"	v
dmenucmd	config.h	/^static const char *dmenucmd[] = {$/;"	v
dmenufont	config.def.h	/^static const char 		dmenufont[]		= "JetBrainsMono Nerd Font:size=8";$/;"	v
dmenufont	config.h	/^static const char 		dmenufont[]		= "JetBrainsMono Nerd Font:size=8";$/;"	v
dmenumon	config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v
dmenumon	config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon34
dpy	dwm.c	/^static Display *dpy;$/;"	v	file:
dpy_fd	patch/ipc.c	/^static int dpy_fd;$/;"	v	file:
dragcfact	patch/dragcfact.c	/^dragcfact(const Arg *arg)$/;"	f
dragmfact	patch/dragmfact.c	/^dragmfact(const Arg *arg)$/;"	f
draw_awesomebar	patch/bar_awesomebar.c	/^draw_awesomebar(Bar *bar, BarArg *a)$/;"	f
draw_bartabgroups	patch/bar_tabgroups.c	/^draw_bartabgroups(Bar *bar, BarArg *a)$/;"	f
draw_fancybar	patch/bar_fancybar.c	/^draw_fancybar(Bar *bar, BarArg *a)$/;"	f
draw_flexwintitle	patch/bar_flexwintitle.c	/^draw_flexwintitle(Bar *bar, BarArg *a)$/;"	f
draw_ltsymbol	patch/bar_ltsymbol.c	/^draw_ltsymbol(Bar *bar, BarArg *a)$/;"	f
draw_pwrl_status	patch/bar_powerline_status.c	/^draw_pwrl_status(Bar *bar, BarArg *a)$/;"	f
draw_pwrl_status_es	patch/bar_powerline_status.c	/^draw_pwrl_status_es(Bar *bar, BarArg *a)$/;"	f
draw_pwrl_tags	patch/bar_powerline_tags.c	/^draw_pwrl_tags(Bar *bar, BarArg *a)$/;"	f
draw_status	patch/bar_status.c	/^draw_status(Bar *bar, BarArg *a)$/;"	f
draw_status2d	patch/bar_status2d.c	/^draw_status2d(Bar *bar, BarArg *a)$/;"	f
draw_status2d_es	patch/bar_status2d.c	/^draw_status2d_es(Bar *bar, BarArg *a)$/;"	f
draw_status_es	patch/bar_status.c	/^draw_status_es(Bar *bar, BarArg *a)$/;"	f
draw_stbutton	patch/bar_statusbutton.c	/^draw_stbutton(Bar *bar, BarArg *a)$/;"	f
draw_systray	patch/bar_systray.c	/^draw_systray(Bar *bar, BarArg *a)$/;"	f
draw_taggrid	patch/bar_taggrid.c	/^draw_taggrid(Bar *bar, BarArg *a)$/;"	f
draw_tags	patch/bar_tags.c	/^draw_tags(Bar *bar, BarArg *a)$/;"	f
draw_wintitle	patch/bar_wintitle.c	/^draw_wintitle(Bar *bar, BarArg *a)$/;"	f
draw_wintitle_floating	patch/bar_wintitle_floating.c	/^draw_wintitle_floating(Bar *bar, BarArg *a)$/;"	f
draw_wintitle_hidden	patch/bar_wintitle_hidden.c	/^draw_wintitle_hidden(Bar *bar, BarArg *a)$/;"	f
drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon34
drawbar	dwm.c	/^drawbar(Monitor *m)$/;"	f
drawbars	dwm.c	/^drawbars(void)$/;"	f
drawbarwin	dwm.c	/^drawbarwin(Bar *bar)$/;"	f
drawfunc	dwm.c	/^	int (*drawfunc)(Bar *bar, BarArg *a);$/;"	m	struct:__anon9	file:
drawindicator	patch/bar_indicators.c	/^drawindicator(Monitor *m, Client *c, unsigned int occ, int x, int y, int w, int h, unsigned int tag, int filled, int invert, int type)$/;"	f
drawpowerlinestatus	patch/bar_powerline_status.c	/^drawpowerlinestatus(int xpos, char *stext, BarArg *barg)$/;"	f
drawroundedcorners	patch/roundedcorners.c	/^void drawroundedcorners(Client *c)$/;"	f
drawstateindicator	patch/bar_indicators.c	/^drawstateindicator(Monitor *m, Client *c, unsigned int occ, int x, int y, int w, int h, unsigned int tag, int filled, int invert)$/;"	f
drawstatusbar	patch/bar_status2d.c	/^drawstatusbar(BarArg *a, char* stext)$/;"	f
drw	dwm.c	/^static Drw *drw;$/;"	v	file:
drw_arrow	drw.c	/^drw_arrow(Drw *drw, int x, int y, unsigned int w, unsigned int h, int direction, int slash)$/;"	f
drw_clr_create	drw.c	/^drw_clr_create($/;"	f
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h, Visual *visual, unsigned int depth, Colormap cmap)$/;"	f
drw_cur_create	drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f
drw_cur_free	drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f
drw_font_create	drw.c	/^drw_font_create(Drw* drw, const char font[])$/;"	f
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h)$/;"	f
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h, Bool markup)$/;"	f
drw_fontset_create	drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f
drw_fontset_free	drw.c	/^drw_fontset_free(Fnt *font)$/;"	f
drw_fontset_getwidth	drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text, Bool markup)$/;"	f
drw_free	drw.c	/^drw_free(Drw *drw)$/;"	f
drw_map	drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f
drw_rect	drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f
drw_resize	drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f
drw_scm_create	drw.c	/^drw_scm_create($/;"	f
drw_setfontset	drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f
drw_setscheme	drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f
drw_settrans	drw.c	/^drw_settrans(Drw *drw, Clr *psc, Clr *nsc)$/;"	f
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char *text, int invert, Bool ignored)$/;"	f
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char *text, int invert, Bool markup)$/;"	f
dump_client	patch/ipc/yajl_dumps.c	/^dump_client(yajl_gen gen, Client *c)$/;"	f
dump_client_focus_change_event	patch/ipc/yajl_dumps.c	/^dump_client_focus_change_event(yajl_gen gen, Client *old_client,$/;"	f
dump_client_state	patch/ipc/yajl_dumps.c	/^dump_client_state(yajl_gen gen, const ClientState *state)$/;"	f
dump_error_message	patch/ipc/yajl_dumps.c	/^dump_error_message(yajl_gen gen, const char *reason)$/;"	f
dump_focused_state_change_event	patch/ipc/yajl_dumps.c	/^dump_focused_state_change_event(yajl_gen gen, const int mon_num,$/;"	f
dump_focused_title_change_event	patch/ipc/yajl_dumps.c	/^dump_focused_title_change_event(yajl_gen gen, const int mon_num,$/;"	f
dump_layout_change_event	patch/ipc/yajl_dumps.c	/^dump_layout_change_event(yajl_gen gen, const int mon_num,$/;"	f
dump_layouts	patch/ipc/yajl_dumps.c	/^dump_layouts(yajl_gen gen, const Layout layouts[], const int layouts_len)$/;"	f
dump_monitor	patch/ipc/yajl_dumps.c	/^dump_monitor(yajl_gen gen, Monitor *mon, int is_selected)$/;"	f
dump_monitor_focus_change_event	patch/ipc/yajl_dumps.c	/^dump_monitor_focus_change_event(yajl_gen gen, const int last_mon_num,$/;"	f
dump_monitors	patch/ipc/yajl_dumps.c	/^dump_monitors(yajl_gen gen, Monitor *mons, Monitor *selmon)$/;"	f
dump_tag	patch/ipc/yajl_dumps.c	/^dump_tag(yajl_gen gen, const char *name, const int tag_mask)$/;"	f
dump_tag_event	patch/ipc/yajl_dumps.c	/^dump_tag_event(yajl_gen gen, int mon_num, TagState old_state,$/;"	f
dump_tag_state	patch/ipc/yajl_dumps.c	/^dump_tag_state(yajl_gen gen, TagState state)$/;"	f
dump_tags	patch/ipc/yajl_dumps.c	/^dump_tags(yajl_gen gen, int tags_len)$/;"	f
dwindle	patch/layout_fibonacci.c	/^dwindle(Monitor *m)$/;"	f	file:
dwm_ipc_header	patch/ipc/dwm-msg.c	/^typedef struct dwm_ipc_header {$/;"	s	file:
dwm_ipc_header	patch/ipc/ipc.h	/^typedef struct dwm_ipc_header {$/;"	s
dwm_ipc_header_t	patch/ipc/dwm-msg.c	/^} __attribute((packed)) dwm_ipc_header_t;$/;"	t	typeref:struct:dwm_ipc_header	file:
dwm_ipc_header_t	patch/ipc/ipc.h	/^} __attribute((packed)) dwm_ipc_header_t;$/;"	t	typeref:struct:dwm_ipc_header
dwmblockspid	patch/bar_dwmblocks.c	/^pid_t dwmblockspid = 0;$/;"	v
dwmblockssig	patch/bar_dwmblocks.c	/^static int dwmblockssig;$/;"	v	file:
dwmdir	config.def.h	/^static const char		dwmdir[]		= "dwm";$/;"	v
dwmdir	config.h	/^static const char		dwmdir[]		= "dwm";$/;"	v
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f
enablegaps	patch/pertag.c	/^	int enablegaps[NUMTAGS + 1];$/;"	m	struct:Pertag	file:
enablegaps	patch/vanitygaps.c	/^static int enablegaps = 1;$/;"	v	file:
enqueue	patch/rotatestack.c	/^enqueue(Client *c)$/;"	f
enqueuestack	patch/rotatestack.c	/^enqueuestack(Client *c)$/;"	f
enternotify	dwm.c	/^enternotify(XEvent *e)$/;"	f
epoll_fd	patch/ipc.c	/^static int epoll_fd;$/;"	v	file:
epoll_fd	patch/ipc/ipc.c	/^static int epoll_fd = -1;$/;"	v	file:
estext	dwm.c	/^static char estext[1024];$/;"	v	file:
estext	dwm.c	/^static char estext[512];$/;"	v	file:
event	patch/ipc/IPCClient.h	/^  struct epoll_event event;$/;"	m	struct:IPCClient	typeref:struct:IPCClient::epoll_event
expand	patch/exresize.c	/^expand(unsigned char mask)$/;"	f
expandmask	dwm.c	/^	unsigned char expandmask;$/;"	m	struct:Client	file:
expandx1	dwm.c	/^	int expandx1, expandy1, expandx2, expandy2;$/;"	m	struct:Client	file:
expandx2	dwm.c	/^	int expandx1, expandy1, expandx2, expandy2;$/;"	m	struct:Client	file:
expandy1	dwm.c	/^	int expandx1, expandy1, expandx2, expandy2;$/;"	m	struct:Client	file:
expandy2	dwm.c	/^	int expandx1, expandy1, expandx2, expandy2;$/;"	m	struct:Client	file:
explace	patch/exresize.c	/^explace(const Arg *arg)$/;"	f
expose	dwm.c	/^expose(XEvent *e)$/;"	f
exresize	patch/exresize.c	/^exresize(const Arg *arg)$/;"	f
external	dwm.c	/^	int external;$/;"	m	struct:Bar	file:
f	dwm.c	/^	float f;$/;"	m	union:__anon7	file:
fake_signal	patch/dwmc.c	/^fake_signal(void)$/;"	f
fake_signal	patch/fsignal.c	/^fake_signal(void)$/;"	f
fakefullscreen	dwm.c	/^	int fakefullscreen;$/;"	m	struct:Client	file:
fd	patch/ipc/IPCClient.h	/^  int fd;$/;"	m	struct:IPCClient
fibonacci	patch/layout_fibonacci.c	/^fibonacci(Monitor *m, int s)$/;"	f
findbefore	patch/zoomswap.c	/^findbefore(Client *c) {$/;"	f
flexlayouts	patch/layout_flextile-deluxe.c	/^static const LayoutArranger flexlayouts[] = {$/;"	v	file:
flextile	patch/layout_flextile-deluxe.c	/^flextile(Monitor *m)$/;"	f	file:
flextiles	patch/layout_flextile-deluxe.c	/^static const TileArranger flextiles[] = {$/;"	v	file:
flextitlecalculate	patch/bar_flexwintitle.c	/^flextitlecalculate($/;"	f
flextitleclick	patch/bar_flexwintitle.c	/^flextitleclick(Monitor *m, Client *c, int passx, int x, int w, int unused, Arg *arg, BarArg *barg)$/;"	f
flextitledraw	patch/bar_flexwintitle.c	/^flextitledraw(Monitor *m, Client *c, int unused, int x, int w, int tabscheme, Arg *arg, BarArg *barg)$/;"	f
flextitledrawarea	patch/bar_flexwintitle.c	/^flextitledrawarea(Monitor *m, Client *c, int x, int r, int w, int max_clients, int scheme, int draw_tiled, int draw_hidden, int draw_floating,$/;"	f
floatindicatortype	config.def.h	/^static int 			floatindicatortype	= INDICATOR_TOP_LEFT_SQUARE;$/;"	v
floatindicatortype	config.h	/^static int 			floatindicatortype	= INDICATOR_TOP_LEFT_SQUARE;$/;"	v
floatpos	dwm.c	/^	const char *floatpos;$/;"	m	struct:__anon15	file:
floatpos	patch/floatpos.c	/^floatpos(const Arg *arg)$/;"	f
flush_socket_reply	patch/ipc/dwm-msg.c	/^flush_socket_reply()$/;"	f	file:
focus	dwm.c	/^focus(Client *c)$/;"	f
focusin	dwm.c	/^focusin(XEvent *e)$/;"	f
focusmaster	patch/focusmaster.c	/^focusmaster(const Arg *arg)$/;"	f
focusmon	dwm.c	/^focusmon(const Arg *arg)$/;"	f
focusstack	dwm.c	/^focusstack(const Arg *arg)$/;"	f
focusstack	patch/stacker.c	/^focusstack(const Arg *arg)$/;"	f
focusurgent	patch/focusurgent.c	/^focusurgent(const Arg *arg)$/;"	f
fonts	config.def.h	/^static const char 		*fonts[]		= { "Noto Color Emoji:size=8",$/;"	v
fonts	config.h	/^static const char 		*fonts[]		= { "Noto Color Emoji:size=8",$/;"	v
fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon34
fullscreen	patch/fullscreen.c	/^fullscreen(const Arg *arg)$/;"	f
func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon11	file:
func	dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon10	file:
func	patch/dwmc.h	/^	void (*func)(const Arg *);$/;"	m	struct:__anon25
func	patch/fsignal.h	/^	void (*func)(const Arg *);$/;"	m	struct:__anon29
func	patch/ipc/ipc.h	/^  ArgFunction func;$/;"	m	struct:IPCCommand
func	patch/keymodes.h	/^	void (*func)(const Arg *);$/;"	m	struct:__anon18
gaplessgrid	patch/layout_gapplessgrid.c	/^gaplessgrid(Monitor *m)$/;"	f
gappih	config.def.h	/^static const unsigned int	gappih			= 20;  \/* horiz inner gap between windows *\/$/;"	v
gappih	config.h	/^static const unsigned int	gappih			= 20;  \/* horiz inner gap between windows *\/$/;"	v
gappih	dwm.c	/^	int gappih;           \/* horizontal gap between windows *\/$/;"	m	struct:Monitor	file:
gappiv	config.def.h	/^static const unsigned int	gappiv			= 10;  \/* vert inner gap between windows *\/$/;"	v
gappiv	config.h	/^static const unsigned int	gappiv			= 10;  \/* vert inner gap between windows *\/$/;"	v
gappiv	dwm.c	/^	int gappiv;           \/* vertical gap between windows *\/$/;"	m	struct:Monitor	file:
gappoh	config.def.h	/^static const unsigned int	gappoh			= 10;  \/* horiz outer gap between windows and screen edge *\/$/;"	v
gappoh	config.h	/^static const unsigned int	gappoh			= 10;  \/* horiz outer gap between windows and screen edge *\/$/;"	v
gappoh	dwm.c	/^	int gappoh;           \/* horizontal outer gaps *\/$/;"	m	struct:Monitor	file:
gappov	config.def.h	/^static const unsigned int	gappov			= 10;  \/* vert outer gap between windows and screen edge *\/$/;"	v
gappov	config.h	/^static const unsigned int	gappov			= 10;  \/* vert outer gap between windows and screen edge *\/$/;"	v
gappov	dwm.c	/^	int gappov;           \/* vertical outer gaps *\/$/;"	m	struct:Monitor	file:
gc	drw.h	/^	GC gc;$/;"	m	struct:__anon34
get_conn	patch/mdpcontrol.c	/^struct mpd_connection *get_conn()$/;"	f
get_dwm_client	patch/ipc/dwm-msg.c	/^get_dwm_client(Window win)$/;"	f	file:
get_dwm_path	patch/selfrestart.c	/^char *get_dwm_path()$/;"	f
get_layouts	patch/ipc/dwm-msg.c	/^get_layouts()$/;"	f	file:
get_luminance	patch/bar_vtcolors.c	/^int get_luminance(char *r)$/;"	f
get_monitors	patch/ipc/dwm-msg.c	/^get_monitors()$/;"	f	file:
get_regerror	patch/mdpcontrol.c	/^char *get_regerror(int errcode, regex_t *compiled)$/;"	f
get_tags	patch/ipc/dwm-msg.c	/^get_tags()$/;"	f	file:
get_vt_colors	patch/bar_vtcolors.c	/^get_vt_colors(void)$/;"	f
getatomprop	dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f
getdwmblockspid	patch/bar_dwmblocks.c	/^getdwmblockspid()$/;"	f
getfacts	patch/layout_facts.c	/^getfacts(Monitor *m, int msize, int ssize, float *mf, float *sf, int *mr, int *sr)$/;"	f
getfactsforrange	patch/layout_flextile-deluxe.c	/^getfactsforrange(Monitor *m, int an, int ai, int size, int *rest, float *fact)$/;"	f	file:
getfloatpos	patch/floatpos.c	/^getfloatpos(int pos, char pCh, int size, char sCh, int min_p, int max_s, int cp, int cs, int cbw, int defgrid, int *out_p, int *out_s)$/;"	f
getgaps	patch/vanitygaps.c	/^getgaps(Monitor *m, int *oh, int *ov, int *ih, int *iv, unsigned int *nc)$/;"	f	file:
getparentprocess	patch/swallow.c	/^getparentprocess(pid_t p)$/;"	f
getrootptr	dwm.c	/^getrootptr(int *x, int *y)$/;"	f
getschemefor	patch/bar_flexwintitle.c	/^getschemefor(Monitor *m, int group, int activegroup)$/;"	f
getselschemefor	patch/bar_flexwintitle.c	/^getselschemefor(int scheme)$/;"	f
getstate	dwm.c	/^getstate(Window w)$/;"	f
gettextprop	dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f
grabbuttons	dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f
grabdefkeys	dwm.c	/^grabdefkeys(void)$/;"	f
grabkeys	patch/keymodes.c	/^grabkeys(void)$/;"	f
grid	patch/layout_grid.c	/^grid(Monitor *m)$/;"	f
h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt
h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon34
h	dwm.c	/^	int h;$/;"	m	struct:__anon14	file:
h	dwm.c	/^	int h;$/;"	m	struct:__anon8	file:
h	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	file:
handler	dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	file:
handlexevent	patch/ipc.c	/^handlexevent(struct epoll_event *ev)$/;"	f
help	patch/cmdcustomize.c	/^help(void)$/;"	f
hidalpha	config.def.h	/^static const unsigned int 	hidalpha	= 0x4D; \/* 77 *\/$/;"	v
hidalpha	config.h	/^static const unsigned int 	hidalpha	= 0x4D; \/* 77 *\/$/;"	v
hidbgcolor	config.def.h	/^static char			hidbgcolor[]		= "#000000"; \/* Hidden windon background color *\/$/;"	v
hidbgcolor	config.h	/^static char			hidbgcolor[]		= "#000000"; \/* Hidden windon background color *\/$/;"	v
hidbordercolor	config.def.h	/^static char			hidbordercolor[]	= "#005577"; \/* UNUSED ?? *\/$/;"	v
hidbordercolor	config.h	/^static char			hidbordercolor[]	= "#005577"; \/* UNUSED ?? *\/$/;"	v
hide	patch/bar_wintitleactions.c	/^hide(Client *c) {$/;"	f
hidfgcolor	config.def.h	/^static char			hidfgcolor[]		= "#226622"; \/* Hidden window text colour *\/$/;"	v
hidfgcolor	config.h	/^static char			hidfgcolor[]		= "#226622"; \/* Hidden window text colour *\/$/;"	v
hidfloatcolor	config.def.h	/^static char			hidfloatcolor[]		= "#f76e0c"; \/* UNUSED ?? *\/$/;"	v
hidfloatcolor	config.h	/^static char			hidfloatcolor[]		= "#f76e0c"; \/* UNUSED ?? *\/$/;"	v
holdbar	patch/bar_holdbar.c	/^holdbar(const Arg *arg)$/;"	f
horizgrid	patch/layout_horizgrid.c	/^horizgrid(Monitor *m) {$/;"	f
i	dwm.c	/^	long i;$/;"	m	union:__anon7	file:
icons	patch/bar_systray.h	/^	Client *icons;$/;"	m	struct:Systray
idx	dwm.c	/^	int idx;$/;"	m	struct:Bar	file:
ignore_reply	patch/ipc/dwm-msg.c	/^static unsigned int ignore_reply = 0;$/;"	v	file:
ignoreconfigurerequests	dwm.c	/^static int ignoreconfigurerequests = 0;$/;"	v	file:
inch	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
incnmaster	dwm.c	/^incnmaster(const Arg *arg)$/;"	f
incnstack	patch/layout_flextile-deluxe.c	/^incnstack(const Arg *arg)$/;"	f
incrgaps	patch/vanitygaps.c	/^incrgaps(const Arg *arg)$/;"	f	file:
incrigaps	patch/vanitygaps.c	/^incrigaps(const Arg *arg)$/;"	f	file:
incrihgaps	patch/vanitygaps.c	/^incrihgaps(const Arg *arg)$/;"	f	file:
incrivgaps	patch/vanitygaps.c	/^incrivgaps(const Arg *arg)$/;"	f	file:
incrogaps	patch/vanitygaps.c	/^incrogaps(const Arg *arg)$/;"	f	file:
incrohgaps	patch/vanitygaps.c	/^incrohgaps(const Arg *arg)$/;"	f	file:
incrovgaps	patch/vanitygaps.c	/^incrovgaps(const Arg *arg)$/;"	f	file:
incw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
index	dwm.c	/^	int index;$/;"	m	struct:Monitor	file:
inplacerotate	patch/inplacerotate.c	/^inplacerotate(const Arg *arg)$/;"	f
insertclient	patch/inplacerotate.c	/^insertclient(Client *item, Client *insertItem, int after)$/;"	f
inset	dwm.c	/^	Inset inset;$/;"	m	struct:Monitor	file:
instance	dwm.c	/^	const char *instance;$/;"	m	struct:__anon15	file:
ipc_accept_client	patch/ipc/ipc.c	/^ipc_accept_client()$/;"	f
ipc_cleanup	patch/ipc/ipc.c	/^ipc_cleanup()$/;"	f
ipc_client_focus_change_event	patch/ipc/ipc.c	/^ipc_client_focus_change_event(int mon_num, Client *old_client,$/;"	f
ipc_client_new	patch/ipc/IPCClient.c	/^ipc_client_new(int fd)$/;"	f
ipc_clients	patch/ipc/ipc.c	/^static IPCClientList ipc_clients = NULL;$/;"	v	file:
ipc_commands	patch/ipc/ipc.c	/^static IPCCommand *ipc_commands;$/;"	v	file:
ipc_commands_len	patch/ipc/ipc.c	/^static unsigned int ipc_commands_len;$/;"	v	file:
ipc_create_socket	patch/ipc/ipc.c	/^ipc_create_socket(const char *filename)$/;"	f	file:
ipc_drop_client	patch/ipc/ipc.c	/^ipc_drop_client(IPCClient *c)$/;"	f
ipc_event_init_message	patch/ipc/ipc.c	/^ipc_event_init_message(yajl_gen *gen)$/;"	f	file:
ipc_event_prepare_send_message	patch/ipc/ipc.c	/^ipc_event_prepare_send_message(yajl_gen gen, IPCEvent event)$/;"	f	file:
ipc_event_stoi	patch/ipc/ipc.c	/^ipc_event_stoi(const char *subscription, IPCEvent *event)$/;"	f	file:
ipc_focused_state_change_event	patch/ipc/ipc.c	/^ipc_focused_state_change_event(const int mon_num, const Window client_id,$/;"	f
ipc_focused_title_change_event	patch/ipc/ipc.c	/^ipc_focused_title_change_event(const int mon_num, const Window client_id,$/;"	f
ipc_free_parsed_command_members	patch/ipc/ipc.c	/^ipc_free_parsed_command_members(IPCParsedCommand *command)$/;"	f	file:
ipc_get_client	patch/ipc/ipc.c	/^ipc_get_client(int fd)$/;"	f
ipc_get_dwm_client	patch/ipc/ipc.c	/^ipc_get_dwm_client(IPCClient *ipc_client, const char *msg, const Monitor *mons)$/;"	f	file:
ipc_get_ipc_command	patch/ipc/ipc.c	/^ipc_get_ipc_command(const char *name, IPCCommand *ipc_command)$/;"	f	file:
ipc_get_layouts	patch/ipc/ipc.c	/^ipc_get_layouts(IPCClient *c, const Layout layouts[], const int layouts_len)$/;"	f	file:
ipc_get_monitors	patch/ipc/ipc.c	/^ipc_get_monitors(IPCClient *c, Monitor *mons, Monitor *selmon)$/;"	f	file:
ipc_get_sock_fd	patch/ipc/ipc.c	/^ipc_get_sock_fd()$/;"	f
ipc_get_tags	patch/ipc/ipc.c	/^ipc_get_tags(IPCClient *c, const int tags_len)$/;"	f	file:
ipc_handle_client_epoll_event	patch/ipc/ipc.c	/^ipc_handle_client_epoll_event(struct epoll_event *ev, Monitor *mons,$/;"	f
ipc_handle_socket_epoll_event	patch/ipc/ipc.c	/^ipc_handle_socket_epoll_event(struct epoll_event *ev)$/;"	f
ipc_init	patch/ipc/ipc.c	/^ipc_init(const char *socket_path, const int p_epoll_fd, IPCCommand commands[],$/;"	f
ipc_is_client_registered	patch/ipc/ipc.c	/^ipc_is_client_registered(int fd)$/;"	f
ipc_layout_change_event	patch/ipc/ipc.c	/^ipc_layout_change_event(const int mon_num, const char *old_symbol,$/;"	f
ipc_list_add_client	patch/ipc/IPCClient.c	/^ipc_list_add_client(IPCClientList *list, IPCClient *nc)$/;"	f
ipc_list_get_client	patch/ipc/IPCClient.c	/^ipc_list_get_client(IPCClientList list, int fd)$/;"	f
ipc_list_remove_client	patch/ipc/IPCClient.c	/^ipc_list_remove_client(IPCClientList *list, IPCClient *c)$/;"	f
ipc_monitor_focus_change_event	patch/ipc/ipc.c	/^ipc_monitor_focus_change_event(const int last_mon_num, const int new_mon_num)$/;"	f
ipc_parse_get_dwm_client	patch/ipc/ipc.c	/^ipc_parse_get_dwm_client(const char *msg, Window *win)$/;"	f	file:
ipc_parse_run_command	patch/ipc/ipc.c	/^ipc_parse_run_command(char *msg, IPCParsedCommand *parsed_command)$/;"	f	file:
ipc_parse_subscribe	patch/ipc/ipc.c	/^ipc_parse_subscribe(const char *msg, IPCSubscriptionAction *subscribe,$/;"	f	file:
ipc_prepare_reply_failure	patch/ipc/ipc.c	/^ipc_prepare_reply_failure(IPCClient *c, IPCMessageType msg_type,$/;"	f
ipc_prepare_reply_success	patch/ipc/ipc.c	/^ipc_prepare_reply_success(IPCClient *c, IPCMessageType msg_type)$/;"	f
ipc_prepare_send_message	patch/ipc/ipc.c	/^ipc_prepare_send_message(IPCClient *c, const IPCMessageType msg_type,$/;"	f
ipc_read_client	patch/ipc/ipc.c	/^ipc_read_client(IPCClient *c, IPCMessageType *msg_type, uint32_t *msg_size,$/;"	f
ipc_recv_message	patch/ipc/ipc.c	/^ipc_recv_message(int fd, uint8_t *msg_type, uint32_t *reply_size,$/;"	f	file:
ipc_reply_init_message	patch/ipc/ipc.c	/^ipc_reply_init_message(yajl_gen *gen)$/;"	f	file:
ipc_reply_prepare_send_message	patch/ipc/ipc.c	/^ipc_reply_prepare_send_message(yajl_gen gen, IPCClient *c,$/;"	f	file:
ipc_run_command	patch/ipc/ipc.c	/^ipc_run_command(IPCClient *ipc_client, char *msg)$/;"	f	file:
ipc_send_events	patch/ipc/ipc.c	/^ipc_send_events(Monitor *mons, Monitor **lastselmon, Monitor *selmon)$/;"	f
ipc_subscribe	patch/ipc/ipc.c	/^ipc_subscribe(IPCClient *c, const char *msg)$/;"	f	file:
ipc_tag_change_event	patch/ipc/ipc.c	/^ipc_tag_change_event(int mon_num, TagState old_state, TagState new_state)$/;"	f
ipc_validate_run_command	patch/ipc/ipc.c	/^ipc_validate_run_command(IPCParsedCommand *parsed, const IPCCommand actual)$/;"	f	file:
ipc_write_client	patch/ipc/ipc.c	/^ipc_write_client(IPCClient *c)$/;"	f
ipc_write_message	patch/ipc/ipc.c	/^ipc_write_message(int fd, const void *buf, size_t count)$/;"	f	file:
is_float	patch/ipc/dwm-msg.c	/^is_float(const char *s)$/;"	f	file:
is_signed_int	patch/ipc/dwm-msg.c	/^is_signed_int(const char *s)$/;"	f	file:
is_unsigned_int	patch/ipc/dwm-msg.c	/^is_unsigned_int(const char *s)$/;"	f	file:
iscentered	dwm.c	/^	int iscentered;$/;"	m	struct:Client	file:
iscentered	dwm.c	/^	int iscentered;$/;"	m	struct:__anon15	file:
isdescprocess	patch/swallow.c	/^isdescprocess(pid_t p, pid_t c)$/;"	f
isfakefullscreen	dwm.c	/^	int isfakefullscreen;$/;"	m	struct:__anon15	file:
isfixed	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	file:
isfixed	dwm.c	/^       int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	file:
isfloating	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	file:
isfloating	dwm.c	/^	int isfloating;$/;"	m	struct:__anon15	file:
isfloating	dwm.c	/^       int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	file:
isfullscreen	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	file:
isfullscreen	dwm.c	/^       int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	file:
ismax	dwm.c	/^	int ismax, wasfloating;$/;"	m	struct:Client	file:
ispermanent	dwm.c	/^	int ispermanent;$/;"	m	struct:Client	file:
ispermanent	dwm.c	/^	int ispermanent;$/;"	m	struct:__anon15	file:
isprotodel	patch/keymodes.c	/^isprotodel(Client *c)$/;"	f
issteam	dwm.c	/^	int issteam;$/;"	m	struct:Client	file:
issticky	dwm.c	/^	int issticky;$/;"	m	struct:Client	file:
isterminal	dwm.c	/^	int isterminal, noswallow;$/;"	m	struct:Client	file:
isterminal	dwm.c	/^	int isterminal;$/;"	m	struct:__anon15	file:
isuniquegeom	dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	file:
isurgent	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	file:
isurgent	dwm.c	/^       int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	file:
keydefpress	dwm.c	/^keydefpress(XEvent *e)$/;"	f
keymode	patch/keymodes.h	/^static unsigned int keymode = INSERTMODE;$/;"	v
keypress	patch/keymodes.c	/^keypress(XEvent *e)$/;"	f
keyrelease	patch/bar_holdbar.c	/^keyrelease(XEvent *e)$/;"	f
keyrelease	patch/combo.c	/^keyrelease(XEvent *e)$/;"	f
keys	config.def.h	/^static Key keys[] = {$/;"	v
keys	config.h	/^static Key keys[] = {$/;"	v
keysym	dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon11	file:
keysym	patch/keymodes.h	/^	KeySym keysym[4];$/;"	m	struct:__anon18
killclient	dwm.c	/^killclient(const Arg *arg)$/;"	f
killunsel	patch/killunsel.c	/^killunsel(const Arg *arg)$/;"	f
last_layout	patch/fullscreen.c	/^Layout *last_layout;$/;"	v
lastbutton	patch/bar_statuscmd.c	/^static int lastbutton;$/;"	v	file:
lastlt	dwm.c	/^	const Layout *lastlt;$/;"	m	struct:Monitor	file:
lastltsymbol	dwm.c	/^	char lastltsymbol[16];$/;"	m	struct:Monitor	file:
lastsel	dwm.c	/^	Client *lastsel;$/;"	m	struct:Monitor	file:
lastselmon	patch/ipc.c	/^static Monitor *lastselmon;$/;"	v	file:
layout	drw.h	/^	PangoLayout *layout;$/;"	m	struct:Fnt
layout	dwm.c	/^	int layout;$/;"	m	struct:__anon12	file:
layout	dwm.c	/^	int layout;$/;"	m	struct:__anon16	file:
layout_floating_master	patch/layout_flextile-deluxe.c	/^layout_floating_master(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_floating_master_fixed	patch/layout_flextile-deluxe.c	/^layout_floating_master_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_no_split	patch/layout_flextile-deluxe.c	/^layout_no_split(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_centered_horizontal	patch/layout_flextile-deluxe.c	/^layout_split_centered_horizontal(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_centered_horizontal_fixed	patch/layout_flextile-deluxe.c	/^layout_split_centered_horizontal_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_centered_vertical	patch/layout_flextile-deluxe.c	/^layout_split_centered_vertical(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_centered_vertical_fixed	patch/layout_flextile-deluxe.c	/^layout_split_centered_vertical_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_horizontal	patch/layout_flextile-deluxe.c	/^layout_split_horizontal(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_horizontal_dual_stack	patch/layout_flextile-deluxe.c	/^layout_split_horizontal_dual_stack(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_horizontal_dual_stack_fixed	patch/layout_flextile-deluxe.c	/^layout_split_horizontal_dual_stack_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_horizontal_fixed	patch/layout_flextile-deluxe.c	/^layout_split_horizontal_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_vertical	patch/layout_flextile-deluxe.c	/^layout_split_vertical(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_vertical_dual_stack	patch/layout_flextile-deluxe.c	/^layout_split_vertical_dual_stack(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_vertical_dual_stack_fixed	patch/layout_flextile-deluxe.c	/^layout_split_vertical_dual_stack_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layout_split_vertical_fixed	patch/layout_flextile-deluxe.c	/^layout_split_vertical_fixed(Monitor *m, int x, int y, int h, int w, int ih, int iv, int n)$/;"	f	file:
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v
layouts	config.h	/^static const Layout layouts[] = {$/;"	v
layoutsymb	patch/layout_flextile-deluxe.h	/^static char layoutsymb[] = {$/;"	v
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[NUMTAGS > 30 ? -1 : 1]; };$/;"	m	struct:NumTags	file:
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[NUMTAGS > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	file:
loadxrdb	patch/xrdb.c	/^loadxrdb()$/;"	f
localshare	config.def.h	/^static const char		localshare[]		= ".local\/share";$/;"	v
localshare	config.h	/^static const char		localshare[]		= ".local\/share";$/;"	v
lockcmd	config.def.h	/^static const char *lockcmd[]	= { "slockWrap", NULL};$/;"	v
lockcmd	config.h	/^static const char *lockcmd[]	= { "slockWrap", NULL};$/;"	v
lrpad	dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	file:
lt	dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	file:
ltaxis	dwm.c	/^	int ltaxis[4];$/;"	m	struct:Monitor	file:
ltaxis	patch/pertag.c	/^	int ltaxis[NUMTAGS + 1][LTAXIS_LAST];$/;"	m	struct:Pertag	file:
ltidxs	patch/pertag.c	/^	const Layout *ltidxs[NUMTAGS + 1][2]; \/* matrix of tags and layouts indexes  *\/$/;"	m	struct:Pertag	file:
ltidxs	patch/pertag.c	/^	const Layout *ltidxs[NUMTAGS + 1][3]; \/* matrix of tags and layouts indexes  *\/$/;"	m	struct:Pertag	file:
ltsymbol	dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	file:
magic	patch/ipc/dwm-msg.c	/^  uint8_t magic[IPC_MAGIC_LEN];$/;"	m	struct:dwm_ipc_header	file:
magic	patch/ipc/ipc.h	/^  uint8_t magic[IPC_MAGIC_LEN];$/;"	m	struct:dwm_ipc_header
main	dwm.c	/^main(int argc, char *argv[])$/;"	f
main	patch/ipc/dwm-msg.c	/^main(int argc, char *argv[])$/;"	f
main	transient.c	/^int main(void) {$/;"	f
manage	dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f
managealtbar	patch/bar_anybar.c	/^managealtbar(Window win, XWindowAttributes *wa)$/;"	f
mappingnotify	dwm.c	/^mappingnotify(XEvent *e)$/;"	f
maprequest	dwm.c	/^maprequest(XEvent *e)$/;"	f
mask	dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon10	file:
masteraxis	dwm.c	/^	int masteraxis; \/\/ master stack area$/;"	m	struct:__anon12	file:
maxa	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	file:
maxh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
maximize	patch/maximize.c	/^maximize(int x, int y, int w, int h)$/;"	f
maxw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
mfact	config.def.h	/^static const float mfact	= 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v
mfact	config.h	/^static const float mfact	= 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v
mfact	dwm.c	/^	float mfact;$/;"	m	struct:Monitor	file:
mfact	dwm.c	/^	float mfact;$/;"	m	struct:__anon16	file:
mfacts	patch/pertag.c	/^	float mfacts[NUMTAGS + 1]; \/* mfacts per tag *\/$/;"	m	struct:Pertag	file:
mh	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	file:
mina	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	file:
minh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
minw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	file:
mirrorlayout	patch/layout_flextile-deluxe.c	/^mirrorlayout(const Arg *arg)$/;"	f
mkdirp	patch/ipc/util.c	/^mkdirp(const char *path)$/;"	f
mod	dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon11	file:
mod	patch/keymodes.h	/^	unsigned int mod[4];$/;"	m	struct:__anon18
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Bar	file:
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon15	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon16	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon9	file:
monocle	patch/layout_monocle.c	/^monocle(Monitor *m)$/;"	f
monoclesymbols	patch/layout_flextile-deluxe.c	/^monoclesymbols(Monitor *m, unsigned int n)$/;"	f	file:
mons	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	file:
motifatom	patch/decorationhints.c	/^static Atom motifatom;$/;"	v	file:
motionnotify	dwm.c	/^motionnotify(XEvent *e)$/;"	f
movemouse	dwm.c	/^movemouse(const Arg *arg)$/;"	f
moveplace	patch/moveplace.c	/^moveplace(const Arg *arg)$/;"	f
moveresize	patch/moveresize.c	/^moveresize(const Arg *arg) {$/;"	f
movestack	patch/movestack.c	/^movestack(const Arg *arg)$/;"	f
mpdchange	patch/mdpcontrol.c	/^void mpdchange(const Arg *direction)$/;"	f
mpdcontrol	patch/mdpcontrol.c	/^void mpdcontrol()$/;"	f
mw	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	file:
mx	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	file:
my	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	file:
name	dwm.c	/^	char *name; \/\/ for debugging$/;"	m	struct:__anon9	file:
name	dwm.c	/^	char name[256];$/;"	m	struct:Client	file:
name	patch/ipc/ipc.h	/^  char *name;$/;"	m	struct:IPCCommand
name	patch/ipc/ipc.h	/^  char *name;$/;"	m	struct:IPCParsedCommand
name	patch/scratchpad.h	/^       const char *name;$/;"	m	struct:__anon23
needresize	dwm.c	/^	int needresize;$/;"	m	struct:Client	file:
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];$/;"	v	file:
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	file:
neverfocus	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	file:
neverfocus	dwm.c	/^       int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	file:
next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt::Fnt
next	dwm.c	/^	Bar *next;$/;"	m	struct:Bar	file:
next	dwm.c	/^	Client *next;$/;"	m	struct:Client	file:
next	dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	file:
next	patch/ipc/IPCClient.h	/^  IPCClient *next;$/;"	m	struct:IPCClient
nextc	patch/push.c	/^nextc(Client *c, float f)$/;"	f	file:
nexttiled	dwm.c	/^nexttiled(Client *c)$/;"	f
nmaster	config.def.h	/^static const int nmaster	= 1;    \/* number of clients in master area *\/$/;"	v
nmaster	config.h	/^static const int nmaster	= 1;    \/* number of clients in master area *\/$/;"	v
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	file:
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:__anon12	file:
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:__anon16	file:
nmasters	patch/pertag.c	/^	int nmasters[NUMTAGS + 1]; \/* number of windows in master area *\/$/;"	m	struct:Pertag	file:
normalizepath	patch/ipc/util.c	/^normalizepath(const char *path, char **normal)$/;"	f
normbgcolor	config.def.h	/^static char 			normbgcolor[]		= "#132613"; \/* Background of status bar *\/$/;"	v
normbgcolor	config.h	/^static char 			normbgcolor[]		= "#132613"; \/* Background of status bar *\/$/;"	v
normbordercolor	config.def.h	/^static char 			normbordercolor[]	= "#222222"; \/* Unselected window border colour (also bar border)*\/$/;"	v
normbordercolor	config.h	/^static char 			normbordercolor[]	= "#222222"; \/* Unselected window border colour (also bar border)*\/$/;"	v
normfgcolor	config.def.h	/^static char 			normfgcolor[]		= "#BBBBBB"; \/* Foreground of status bar *\/$/;"	v
normfgcolor	config.h	/^static char 			normfgcolor[]		= "#BBBBBB"; \/* Foreground of status bar *\/$/;"	v
normfloatcolor	config.def.h	/^static char 			normfloatcolor[]	= "#2D1738"; \/* Unselected floating window border colour*\/$/;"	v
normfloatcolor	config.h	/^static char 			normfloatcolor[]	= "#2D1738"; \/* Unselected floating window border colour*\/$/;"	v
noswallow	dwm.c	/^	int isterminal, noswallow;$/;"	m	struct:Client	file:
noswallow	dwm.c	/^	int noswallow;$/;"	m	struct:__anon15	file:
nrowgrid	patch/layout_nrowgrid.c	/^nrowgrid(Monitor *m)$/;"	f
nstack	dwm.c	/^	int nstack;$/;"	m	struct:Monitor	file:
nstack	dwm.c	/^	int nstack;$/;"	m	struct:__anon12	file:
nstacks	patch/pertag.c	/^	int nstacks[NUMTAGS + 1]; \/* number of windows in primary stack area *\/$/;"	m	struct:Pertag	file:
nullterminate	patch/ipc/util.c	/^nullterminate(char **str, size_t *len)$/;"	f
num	dwm.c	/^	int num;$/;"	m	struct:Monitor	file:
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	file:
occupied	dwm.c	/^       int occupied;$/;"	m	struct:TagState	file:
oldbw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	file:
oldh	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	file:
oldstate	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	file:
oldstate	dwm.c	/^       int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:ClientState	file:
oldw	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	file:
oldx	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	file:
oldy	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	file:
onlyclient	patch/keymodes.c	/^onlyclient(const Arg *arg)$/;"	f
parentdir	patch/ipc/util.c	/^parentdir(const char *path, char **parent)$/;"	f
pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt
pertag	dwm.c	/^	Pertag *pertag;$/;"	m	struct:Monitor	file:
pertagview	patch/pertag.c	/^pertagview(const Arg *arg)$/;"	f
pid	dwm.c	/^	pid_t pid;$/;"	m	struct:Client	file:
pop	dwm.c	/^pop(Client *c)$/;"	f
preset	dwm.c	/^	LayoutPreset preset;$/;"	m	struct:__anon13	file:
prev	patch/ipc/IPCClient.h	/^  IPCClient *prev;$/;"	m	struct:IPCClient
prevc	patch/push.c	/^prevc(Client *c, float f)$/;"	f	file:
prevclient	patch/pertag.c	/^	Client *prevclient[NUMTAGS + 1];$/;"	m	struct:Pertag	file:
prevstate	dwm.c	/^	ClientState prevstate;$/;"	m	struct:Client	file:
prevt	patch/push_no_master.c	/^prevt(Client *c)$/;"	f
prevtag	patch/pertag.c	/^	unsigned int curtag, prevtag; \/* current and previous tag *\/$/;"	m	struct:Pertag	file:
prevtiled	patch/bar_wintitleactions.c	/^prevtiled(Client *c)$/;"	f
prevzoom	patch/zoomswap.c	/^static Client *prevzoom = NULL;$/;"	v	file:
prevzooms	patch/pertag.c	/^	Client *prevzooms[NUMTAGS + 1]; \/* store zoom information *\/$/;"	m	struct:Pertag	file:
print_socket_reply	patch/ipc/dwm-msg.c	/^print_socket_reply()$/;"	f	file:
print_usage	patch/ipc/dwm-msg.c	/^print_usage(const char *name)$/;"	f	file:
propertynotify	dwm.c	/^propertynotify(XEvent *e)$/;"	f
pushdown	patch/push.c	/^pushdown(const Arg *arg)$/;"	f	file:
pushdown	patch/push_no_master.c	/^pushdown(const Arg *arg)$/;"	f
pushstack	patch/stacker.c	/^pushstack(const Arg *arg)$/;"	f
pushup	patch/push.c	/^pushup(const Arg *arg)$/;"	f	file:
pushup	patch/push_no_master.c	/^pushup(const Arg *arg)$/;"	f
quit	dwm.c	/^quit(const Arg *arg)$/;"	f
rangercmd	config.def.h	/^static const char *rangercmd[]	= {"st", "-e", "ranger", NULL};$/;"	v
rangercmd	config.h	/^static const char *rangercmd[]	= {"st", "-e", "ranger", NULL};$/;"	v
rawestext	dwm.c	/^static char rawestext[1024];$/;"	v	file:
rawstext	dwm.c	/^static char rawstext[1024];$/;"	v	file:
rawstext	dwm.c	/^static char rawstext[512];$/;"	v	file:
read_socket	patch/ipc/dwm-msg.c	/^read_socket(IPCMessageType *msg_type, uint32_t *msg_size, char **msg)$/;"	f	file:
recttomon	dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f
recv_message	patch/ipc/dwm-msg.c	/^recv_message(uint8_t *msg_type, uint32_t *reply_size, uint8_t **reply)$/;"	f	file:
removesystrayicon	patch/bar_systray.c	/^removesystrayicon(Client *i)$/;"	f
reorganizetags	patch/reorganizetags.c	/^reorganizetags(const Arg *arg)$/;"	f
resize	dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f
resizeclient	dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f
resizehints	config.def.h	/^static const int resizehints	= 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v
resizehints	config.h	/^static const int resizehints	= 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v
resizemouse	dwm.c	/^resizemouse(const Arg *arg)$/;"	f
resizerequest	patch/bar_systray.c	/^resizerequest(XEvent *e)$/;"	f
restack	dwm.c	/^restack(Monitor *m)$/;"	f
restart	patch/restartsig.c	/^static int restart = 0;$/;"	v	file:
role	dwm.c	/^	const char *role;$/;"	m	struct:__anon15	file:
root	drw.h	/^	Window root;$/;"	m	struct:__anon34
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	file:
rotatelayoutaxis	patch/layout_flextile-deluxe.c	/^rotatelayoutaxis(const Arg *arg)$/;"	f
rotatestack	patch/rotatestack.c	/^rotatestack(const Arg *arg)$/;"	f
rules	config.def.h	/^static const Rule rules[] = {$/;"	v
rules	config.h	/^static const Rule rules[] = {$/;"	v
run	dwm.c	/^run(void)$/;"	f
run_command	patch/ipc/dwm-msg.c	/^run_command(const char *name, char *args[], int argc)$/;"	f	file:
runautostart	patch/autostart.c	/^runautostart(void)$/;"	f
running	dwm.c	/^static int running = 1;$/;"	v	file:
scan	dwm.c	/^scan(void)$/;"	f
scanner	patch/swallow.c	/^static int scanner;$/;"	v	file:
scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon34
scheme	dwm.c	/^static Clr **scheme;$/;"	v	file:
scratchpad_hide	patch/scratchpad_alt_1.c	/^static void scratchpad_hide ()$/;"	f	file:
scratchpad_last_showed	patch/scratchpad_alt_1.c	/^static Client * scratchpad_last_showed = NULL;$/;"	v	file:
scratchpad_last_showed_is_killed	patch/scratchpad_alt_1.c	/^static _Bool scratchpad_last_showed_is_killed (void)$/;"	f	file:
scratchpad_remove	patch/scratchpad_alt_1.c	/^static void scratchpad_remove ()$/;"	f	file:
scratchpad_show	patch/scratchpad_alt_1.c	/^static void scratchpad_show ()$/;"	f	file:
scratchpad_show_client	patch/scratchpad_alt_1.c	/^static void scratchpad_show_client (Client * c)$/;"	f	file:
scratchpad_show_first	patch/scratchpad_alt_1.c	/^static void scratchpad_show_first (void)$/;"	f	file:
scratchpads	config.def.h	/^static Sp scratchpads[] = {$/;"	v
scratchpads	config.h	/^static Sp scratchpads[] = {$/;"	v
screen	drw.h	/^	int screen;$/;"	m	struct:__anon34
screen	dwm.c	/^static int screen;$/;"	v	file:
sel	dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	file:
selbgcolor	config.def.h	/^static char			selbgcolor[]		= "#007722"; \/* Dmenu Selected item Background *\/$/;"	v
selbgcolor	config.h	/^static char			selbgcolor[]		= "#007722"; \/* Dmenu Selected item Background *\/$/;"	v
selbordercolor	config.def.h	/^static char			selbordercolor[]	= "#CC549C"; \/* Selected window border colour *\/$/;"	v
selbordercolor	config.h	/^static char			selbordercolor[]	= "#CC549C"; \/* Selected window border colour *\/$/;"	v
selected	dwm.c	/^       int selected;$/;"	m	struct:TagState	file:
self_restart	patch/selfrestart.c	/^void self_restart(const Arg *arg)$/;"	f
selfgcolor	config.def.h	/^static char			selfgcolor[]		= "#EEEEEE"; \/* Dmenu Selected item colour *\/$/;"	v
selfgcolor	config.h	/^static char			selfgcolor[]		= "#EEEEEE"; \/* Dmenu Selected item colour *\/$/;"	v
selfloatcolor	config.def.h	/^static char			selfloatcolor[]		= "#cc55cc"; \/* Selected floating window border colour *\/$/;"	v
selfloatcolor	config.h	/^static char			selfloatcolor[]		= "#cc55cc"; \/* Selected floating window border colour *\/$/;"	v
sellt	dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	file:
sellts	patch/pertag.c	/^	unsigned int sellts[NUMTAGS + 1]; \/* selected layouts *\/$/;"	m	struct:Pertag	file:
selmon	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	file:
seltags	dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	file:
send_message	patch/ipc/dwm-msg.c	/^send_message(IPCMessageType msg_type, uint32_t msg_size, uint8_t *msg)$/;"	f	file:
sendevent	dwm.c	/^sendevent(Window w, Atom proto, int mask, long d0, long d1, long d2, long d3, long d4)$/;"	f
sendmon	dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f
setborderpx	patch/setborderpx.c	/^setborderpx(const Arg *arg)$/;"	f
setcfact	patch/cfacts.c	/^setcfact(const Arg *arg)$/;"	f
setclientstate	dwm.c	/^setclientstate(Client *c, long state)$/;"	f
setcurrentdesktop	patch/bar_ewmhtags.c	/^setcurrentdesktop(void)$/;"	f
setdesktopnames	patch/bar_ewmhtags.c	/^setdesktopnames(void)$/;"	f
setflexsymbols	patch/layout_flextile-deluxe.c	/^setflexsymbols(Monitor *m, unsigned int n)$/;"	f	file:
setfloatpos	patch/floatpos.c	/^setfloatpos(Client *c, const char *floatpos)$/;"	f
setfocus	dwm.c	/^setfocus(Client *c)$/;"	f
setfullscreen	dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f
setgaps	patch/vanitygaps.c	/^setgaps(int oh, int ov, int ih, int iv)$/;"	f	file:
setgapsex	patch/vanitygaps.c	/^setgapsex(const Arg *arg)$/;"	f	file:
setinset	patch/insets.c	/^setinset(Monitor *m, Inset inset)$/;"	f
setkeymode	patch/keymodes.c	/^setkeymode(const Arg *arg)$/;"	f
setlayout	dwm.c	/^setlayout(const Arg *arg)$/;"	f
setlayoutaxisex	patch/layout_flextile-deluxe.c	/^setlayoutaxisex(const Arg *arg)$/;"	f	file:
setlayoutex	patch/dwmc.c	/^setlayoutex(const Arg *arg)$/;"	f
setlayoutsafe	patch/ipc.c	/^setlayoutsafe(const Arg *arg)$/;"	f
setmfact	dwm.c	/^setmfact(const Arg *arg)$/;"	f
setnumdesktops	patch/bar_ewmhtags.c	/^setnumdesktops(void)$/;"	f
setstatus	patch/ipc.c	/^setstatus(const Arg *arg)$/;"	f
setup	dwm.c	/^setup(void)$/;"	f
setupepoll	patch/ipc.c	/^setupepoll(void)$/;"	f
seturgent	dwm.c	/^seturgent(Client *c, int urg)$/;"	f
setviewport	patch/bar_ewmhtags.c	/^setviewport(void)$/;"	f
sfh	dwm.c	/^	int sfx, sfy, sfw, sfh; \/* stored float geometry, used on mode revert *\/$/;"	m	struct:Client	file:
sfw	dwm.c	/^	int sfx, sfy, sfw, sfh; \/* stored float geometry, used on mode revert *\/$/;"	m	struct:Client	file:
sfx	dwm.c	/^	int sfx, sfy, sfw, sfh; \/* stored float geometry, used on mode revert *\/$/;"	m	struct:Client	file:
sfy	dwm.c	/^	int sfx, sfy, sfw, sfh; \/* stored float geometry, used on mode revert *\/$/;"	m	struct:Client	file:
sh	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	file:
shiftview	patch/shiftview.c	/^shiftview(const Arg *arg)$/;"	f
shiftviewclients	patch/shiftviewclients.c	/^shiftviewclients(const Arg *arg)$/;"	f
show	patch/bar_wintitleactions.c	/^show(Client *c)$/;"	f
showbar	config.def.h	/^static const int		showbar			= 1;   \/* 0 means no bar *\/$/;"	v
showbar	config.h	/^static const int		showbar			= 1;   \/* 0 means no bar *\/$/;"	v
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Bar	file:
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Monitor	file:
showbar	dwm.c	/^	int showbar;$/;"	m	struct:__anon16	file:
showbars	patch/pertag.c	/^	int showbars[NUMTAGS + 1]; \/* display bar for the current tag *\/$/;"	m	struct:Pertag	file:
showhide	dwm.c	/^showhide(Client *c)$/;"	f
showhideclient	patch/bar_wintitleactions.c	/^showhideclient(const Arg *arg)$/;"	f
showsystray	config.def.h	/^static const int		showsystray		= 1;   \/* 0 means no systray *\/$/;"	v
showsystray	config.h	/^static const int		showsystray		= 1;   \/* 0 means no systray *\/$/;"	v
sig	patch/dwmc.h	/^	const char * sig;$/;"	m	struct:__anon25
sigchld	dwm.c	/^sigchld(int unused)$/;"	f
sigdwmblocks	patch/bar_dwmblocks.c	/^sigdwmblocks(const Arg *arg)$/;"	f
sighup	patch/restartsig.c	/^sighup(int unused)$/;"	f
signal	patch/dwmc	/^signal() {$/;"	f
signum	patch/fsignal.h	/^	unsigned int signum;$/;"	m	struct:__anon29
sigterm	patch/restartsig.c	/^sigterm(int unused)$/;"	f
single_param	patch/ipc/ipc.h	/^  void (*single_param)(const Arg *);$/;"	m	union:ArgFunction
size	patch/ipc/dwm-msg.c	/^  uint32_t size;$/;"	m	struct:dwm_ipc_header	file:
size	patch/ipc/ipc.h	/^  uint32_t size;$/;"	m	struct:dwm_ipc_header
smartgaps	config.def.h	/^static int			smartgaps		= 1;   \/* 1 means no outer gap when there is only one window *\/$/;"	v
smartgaps	config.h	/^static int			smartgaps		= 1;   \/* 1 means no outer gap when there is only one window *\/$/;"	v
snap	config.def.h	/^static const unsigned int	snap			= 32;  \/* snap pixel *\/$/;"	v
snap	config.h	/^static const unsigned int	snap			= 32;  \/* snap pixel *\/$/;"	v
snext	dwm.c	/^	Client *snext;$/;"	m	struct:Client	file:
sock_epoll_event	patch/ipc/ipc.c	/^static struct epoll_event sock_epoll_event;$/;"	v	typeref:struct:epoll_event	file:
sock_fd	patch/ipc/dwm-msg.c	/^static int sock_fd = -1;$/;"	v	file:
sock_fd	patch/ipc/ipc.c	/^static int sock_fd = -1;$/;"	v	file:
sockaddr	patch/ipc/ipc.c	/^static struct sockaddr_un sockaddr;$/;"	v	typeref:struct:sockaddr_un	file:
sortscreens	patch/sortscreens.c	/^sortscreens(XineramaScreenInfo *screens, int n)$/;"	f
spawn	dwm.c	/^spawn(const Arg *arg)$/;"	f
spawnbar	patch/bar_anybar.c	/^spawnbar()$/;"	f
spcmd1	config.def.h	/^	const char *spcmd1[] = {"st", "-n", "spterm",	"-g", "120x34", 			NULL };$/;"	v
spcmd1	config.h	/^	const char *spcmd1[] = {"st", "-n", "spterm",	"-g", "120x34", 			NULL };$/;"	v
spcmd2	config.def.h	/^	const char *spcmd2[] = {"st", "-n", "spfm",	"-g", "144x41", "-e", "ranger", 	NULL };$/;"	v
spcmd2	config.h	/^	const char *spcmd2[] = {"st", "-n", "spfm",	"-g", "144x41", "-e", "ranger", 	NULL };$/;"	v
spcmd3	config.def.h	/^	const char *spcmd3[] = {"st", "-n", "spmocp",	"-g", "140x20", "-e", "mocp", 		NULL };$/;"	v
spcmd3	config.h	/^	const char *spcmd3[] = {"st", "-n", "spmocp",	"-g", "140x20", "-e", "mocp", 		NULL };$/;"	v
spcmd4	config.def.h	/^	const char *spcmd4[] = {"st", "-n", "stMENU",			"-e", "Launcher.sh", 	NULL };$/;"	v
spcmd4	config.h	/^	const char *spcmd4[] = {"st", "-n", "stMENU",			"-e", "Launcher.sh", 	NULL };$/;"	v
spcmd5	config.def.h	/^	const char *spcmd5[] = {"st", "-n", "stMAIL",	"-g", "200x50",	"-e", "neomutt", 	NULL };$/;"	v
spcmd5	config.h	/^	const char *spcmd5[] = {"st", "-n", "stMAIL",	"-g", "200x50",	"-e", "neomutt", 	NULL };$/;"	v
spiral	patch/layout_fibonacci.c	/^spiral(Monitor *m)$/;"	f	file:
stack	dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	file:
stack1axis	dwm.c	/^	int stack1axis; \/\/ primary stack area$/;"	m	struct:__anon12	file:
stack2axis	dwm.c	/^	int stack2axis; \/\/ secondary stack area, e.g. centered master$/;"	m	struct:__anon12	file:
stackpos	patch/stacker.c	/^stackpos(const Arg *arg)$/;"	f
status2dtextlength	patch/bar_status2d.c	/^status2dtextlength(char* stext)$/;"	f
statuscmdn	patch/bar_statuscmd.c	/^static int statuscmdn;$/;"	v	file:
statusexport	patch/bar_statuscmd.c	/^static const char statusexport[] = "export BUTTON=-;";$/;"	v	file:
statusscheme	patch/bar_powerline_status.c	/^static Clr **statusscheme;$/;"	v	file:
statussep	config.def.h	/^static const char 		statussep		= ';'; \/* separator between status bars *\/$/;"	v
statussep	config.h	/^static const char 		statussep		= ';'; \/* separator between status bars *\/$/;"	v
stext	dwm.c	/^static char stext[1024];$/;"	v	file:
stext	dwm.c	/^static char stext[512];$/;"	v	file:
subscribe	patch/ipc/dwm-msg.c	/^subscribe(const char *event)$/;"	f	file:
subscriptions	patch/ipc/IPCClient.h	/^  int subscriptions;$/;"	m	struct:IPCClient
sw	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	file:
swallow	patch/swallow.c	/^swallow(Client *p, Client *c)$/;"	f
swallowfloating	config.def.h	/^static const int		swallowfloating		= 0;   \/* 1 means swallow floating windows by default *\/$/;"	v
swallowfloating	config.h	/^static const int		swallowfloating		= 0;   \/* 1 means swallow floating windows by default *\/$/;"	v
swallowing	dwm.c	/^	Client *swallowing;$/;"	m	struct:Client	file:
swallowingclient	patch/swallow.c	/^swallowingclient(Window w)$/;"	f
swapfocus	patch/swapfocus.c	/^swapfocus(const Arg *arg)$/;"	f
swaptags	patch/swaptags.c	/^swaptags(const Arg *arg)$/;"	f
switchcmd	config.h	/^static const char *switchcmd[]	= { "rofi", "-show", "window", "-icon-theme", "Breeze", "-show-icons", NULL};$/;"	v
switchcol	patch/switchcol.c	/^switchcol(const Arg *arg)$/;"	f
switchtag	dwm.c	/^	int switchtag;$/;"	m	struct:__anon15	file:
switchtag	dwm.c	/^	unsigned int switchtag;$/;"	m	struct:Client	file:
switchtag	patch/bar_taggrid.c	/^switchtag(const Arg *arg)$/;"	f
symbol	dwm.c	/^	const char *symbol;$/;"	m	struct:__anon13	file:
symbolfunc	dwm.c	/^	void (*symbolfunc)(Monitor *, unsigned int);$/;"	m	struct:__anon12	file:
systray	patch/bar_systray.c	/^static Systray *systray = NULL;$/;"	v	file:
systrayorientation	patch/bar_systray.c	/^static unsigned long systrayorientation = _NET_SYSTEM_TRAY_ORIENTATION_HORZ;$/;"	v	file:
systrayspacing	config.def.h	/^static const unsigned int	systrayspacing		= 0;   \/* systray spacing *\/$/;"	v
systrayspacing	config.h	/^static const unsigned int	systrayspacing		= 0;   \/* systray spacing *\/$/;"	v
tag	dwm.c	/^	int tag;$/;"	m	struct:__anon16	file:
tag	dwm.c	/^tag(const Arg *arg)$/;"	f
tagall	patch/tagall.c	/^tagall(const Arg *arg)$/;"	f
tagallex	patch/dwmc.c	/^tagallex(const Arg *arg)$/;"	f
tagallmon	patch/tagallmon.c	/^tagallmon(const Arg *arg)$/;"	f
tagandviewtoleft	patch/focusadjacenttag.c	/^tagandviewtoleft(const Arg *arg)$/;"	f
tagandviewtoright	patch/focusadjacenttag.c	/^tagandviewtoright(const Arg *arg)$/;"	f
tagex	patch/dwmc.c	/^tagex(const Arg *arg)$/;"	f
tagicon	patch/bar_tagicons.c	/^tagicon(Monitor *m, int tag)$/;"	f
tagicons	config.def.h	/^static char *tagicons[][NUMTAGS] = {$/;"	v
tagicons	config.h	/^static char *tagicons[][NUMTAGS] = {$/;"	v
tagindicatortype	config.def.h	/^static int 			tagindicatortype	= INDICATOR_CLIENT_DOTS;$/;"	v
tagindicatortype	config.h	/^static int 			tagindicatortype	= INDICATOR_CLIENT_DOTS;$/;"	v
tagmon	dwm.c	/^tagmon(const Arg *arg)$/;"	f
tagnextmon	patch/tagothermonitor.c	/^tagnextmon(const Arg *arg)$/;"	f
tagnextmonex	patch/tagothermonitor.c	/^tagnextmonex(const Arg *arg)$/;"	f
tagothermon	patch/tagothermonitor.c	/^tagothermon(const Arg *arg, int dir)$/;"	f
tagprevmon	patch/tagothermonitor.c	/^tagprevmon(const Arg *arg)$/;"	f
tagprevmonex	patch/tagothermonitor.c	/^tagprevmonex(const Arg *arg)$/;"	f
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	file:
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon15	file:
tagset	dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	file:
tagsnormbgcolor	config.def.h	/^static char			tagsnormbgcolor[]	= "#222222"; \/* Tag unselected background colour *\/$/;"	v
tagsnormbgcolor	config.h	/^static char			tagsnormbgcolor[]	= "#222222"; \/* Tag unselected background colour *\/$/;"	v
tagsnormbordercolor	config.def.h	/^static char			tagsnormbordercolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsnormbordercolor	config.h	/^static char			tagsnormbordercolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsnormfgcolor	config.def.h	/^static char			tagsnormfgcolor[]	= "#BBBBBB"; \/* Tag unselected text colour *\/$/;"	v
tagsnormfgcolor	config.h	/^static char			tagsnormfgcolor[]	= "#BBBBBB"; \/* Tag unselected text colour *\/$/;"	v
tagsnormfloatcolor	config.def.h	/^static char			tagsnormfloatcolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsnormfloatcolor	config.h	/^static char			tagsnormfloatcolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsselbgcolor	config.def.h	/^static char			tagsselbgcolor[]	= "#007722"; \/* Tag selected background colour *\/$/;"	v
tagsselbgcolor	config.h	/^static char			tagsselbgcolor[]	= "#007722"; \/* Tag selected background colour *\/$/;"	v
tagsselbordercolor	config.def.h	/^static char			tagsselbordercolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsselbordercolor	config.h	/^static char			tagsselbordercolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsselfgcolor	config.def.h	/^static char			tagsselfgcolor[]	= "#EEEEEE"; \/* Tag selected tect colour *\/$/;"	v
tagsselfgcolor	config.h	/^static char			tagsselfgcolor[]	= "#EEEEEE"; \/* Tag selected tect colour *\/$/;"	v
tagsselfloatcolor	config.def.h	/^static char			tagsselfloatcolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagsselfloatcolor	config.h	/^static char			tagsselfloatcolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
tagstate	dwm.c	/^	TagState tagstate;$/;"	m	struct:Monitor	file:
tagswapmon	patch/tagswapmon.c	/^tagswapmon(const Arg *arg)$/;"	f
tagtoleft	patch/focusadjacenttag.c	/^tagtoleft(const Arg *arg)$/;"	f
tagtoright	patch/focusadjacenttag.c	/^tagtoright(const Arg *arg)$/;"	f
termcmd	config.def.h	/^static const char *termcmd[]	= { "st", NULL };$/;"	v
termcmd	config.h	/^static const char *termcmd[]	= { "st", NULL };$/;"	v
termcol0	patch/bar_status2d.c	/^static char termcol0[]  = "#000000"; \/* black   *\/$/;"	v	file:
termcol1	patch/bar_status2d.c	/^static char termcol1[]  = "#ff0000"; \/* red     *\/$/;"	v	file:
termcol10	patch/bar_status2d.c	/^static char termcol10[] = "#33ff00"; \/* green   *\/$/;"	v	file:
termcol11	patch/bar_status2d.c	/^static char termcol11[] = "#ff0099"; \/* yellow  *\/$/;"	v	file:
termcol12	patch/bar_status2d.c	/^static char termcol12[] = "#0066ff"; \/* blue    *\/$/;"	v	file:
termcol13	patch/bar_status2d.c	/^static char termcol13[] = "#cc00ff"; \/* magenta *\/$/;"	v	file:
termcol14	patch/bar_status2d.c	/^static char termcol14[] = "#00ffff"; \/* cyan    *\/$/;"	v	file:
termcol15	patch/bar_status2d.c	/^static char termcol15[] = "#ffffff"; \/* white   *\/$/;"	v	file:
termcol2	patch/bar_status2d.c	/^static char termcol2[]  = "#33ff00"; \/* green   *\/$/;"	v	file:
termcol3	patch/bar_status2d.c	/^static char termcol3[]  = "#ff0099"; \/* yellow  *\/$/;"	v	file:
termcol4	patch/bar_status2d.c	/^static char termcol4[]  = "#0066ff"; \/* blue    *\/$/;"	v	file:
termcol5	patch/bar_status2d.c	/^static char termcol5[]  = "#cc00ff"; \/* magenta *\/$/;"	v	file:
termcol6	patch/bar_status2d.c	/^static char termcol6[]  = "#00ffff"; \/* cyan    *\/$/;"	v	file:
termcol7	patch/bar_status2d.c	/^static char termcol7[]  = "#d0d0d0"; \/* white   *\/$/;"	v	file:
termcol8	patch/bar_status2d.c	/^static char termcol8[]  = "#808080"; \/* black   *\/$/;"	v	file:
termcol9	patch/bar_status2d.c	/^static char termcol9[]  = "#ff0000"; \/* red     *\/$/;"	v	file:
termcolor	patch/bar_status2d.c	/^static char *termcolor[] = {$/;"	v	file:
termforwin	patch/swallow.c	/^termforwin(const Client *w)$/;"	f
textw_wosc	patch/bar_statuscolors.c	/^textw_wosc(char *s)$/;"	f
tile	patch/layout_tile.c	/^tile(Monitor *m)$/;"	f	file:
tilesymb	patch/layout_flextile-deluxe.h	/^static char tilesymb[] = {$/;"	v
title	dwm.c	/^	const char *title;$/;"	m	struct:__anon15	file:
titlenormbgcolor	config.def.h	/^static char			titlenormbgcolor[]	= "#132613"; \/* Background of unselected window title *\/$/;"	v
titlenormbgcolor	config.h	/^static char			titlenormbgcolor[]	= "#132613"; \/* Background of unselected window title *\/$/;"	v
titlenormbordercolor	config.def.h	/^static char			titlenormbordercolor[]	= "#ffffff"; \/* UNUSED ?? *\/$/;"	v
titlenormbordercolor	config.h	/^static char			titlenormbordercolor[]	= "#ffffff"; \/* UNUSED ?? *\/$/;"	v
titlenormfgcolor	config.def.h	/^static char			titlenormfgcolor[]	= "#EEEEEE"; \/* Foreground of unselected window title *\/$/;"	v
titlenormfgcolor	config.h	/^static char			titlenormfgcolor[]	= "#EEEEEE"; \/* Foreground of unselected window title *\/$/;"	v
titlenormfloatcolor	config.def.h	/^static char			titlenormfloatcolor[]	= "#ffffff"; \/* UNUSED ?? *\/$/;"	v
titlenormfloatcolor	config.h	/^static char			titlenormfloatcolor[]	= "#ffffff"; \/* UNUSED ?? *\/$/;"	v
titleselbgcolor	config.def.h	/^static char			titleselbgcolor[]	= "#007722"; \/* Backgroud of selected window title *\/$/;"	v
titleselbgcolor	config.h	/^static char			titleselbgcolor[]	= "#007722"; \/* Backgroud of selected window title *\/$/;"	v
titleselbordercolor	config.def.h	/^static char			titleselbordercolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
titleselbordercolor	config.h	/^static char			titleselbordercolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
titleselfgcolor	config.def.h	/^static char			titleselfgcolor[]	= "#EEEEEE"; \/* Foreground of selected window title *\/$/;"	v
titleselfgcolor	config.h	/^static char			titleselfgcolor[]	= "#EEEEEE"; \/* Foreground of selected window title *\/$/;"	v
titleselfloatcolor	config.def.h	/^static char			titleselfloatcolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
titleselfloatcolor	config.h	/^static char			titleselfloatcolor[]	= "#FFFFFF"; \/* UNUSED ?? *\/$/;"	v
togglealttag	patch/bar_alternativetags.c	/^togglealttag()$/;"	f
togglebar	dwm.c	/^togglebar(const Arg *arg)$/;"	f
togglefakefullscreen	patch/fakefullscreenclient.c	/^togglefakefullscreen(const Arg *arg)$/;"	f
togglefloating	dwm.c	/^togglefloating(const Arg *arg)$/;"	f
togglefullscreen	patch/togglefullscreen.c	/^togglefullscreen(const Arg *arg)$/;"	f
togglegaps	patch/vanitygaps.c	/^togglegaps(const Arg *arg)$/;"	f	file:
togglehorizontalexpand	patch/exresize.c	/^togglehorizontalexpand(const Arg *arg)$/;"	f
togglehorizontalmax	patch/maximize.c	/^togglehorizontalmax(const Arg *arg)$/;"	f
togglemax	patch/maximize.c	/^togglemax(const Arg *arg)$/;"	f
togglemaximize	patch/exresize.c	/^togglemaximize(const Arg *arg)$/;"	f
togglenomodbuttons	patch/nomodbuttons.c	/^togglenomodbuttons(const Arg *arg)$/;"	f
togglescratch	patch/scratchpad.c	/^togglescratch(const Arg *arg)$/;"	f
togglesticky	patch/sticky.c	/^togglesticky(const Arg *arg)$/;"	f
toggletag	dwm.c	/^toggletag(const Arg *arg)$/;"	f
toggletagex	patch/dwmc.c	/^toggletagex(const Arg *arg)$/;"	f
toggleverticalexpand	patch/exresize.c	/^toggleverticalexpand(const Arg *arg)$/;"	f
toggleverticalmax	patch/maximize.c	/^toggleverticalmax(const Arg *arg)$/;"	f
toggleview	dwm.c	/^toggleview(const Arg *arg)$/;"	f
toggleviewex	patch/dwmc.c	/^toggleviewex(const Arg *arg)$/;"	f
togglewin	patch/bar_wintitleactions.c	/^togglewin(const Arg *arg)$/;"	f
topbar	config.def.h	/^static const int		topbar			= 1;   \/* 0 means bottom bar *\/$/;"	v
topbar	config.h	/^static const int		topbar			= 1;   \/* 0 means bottom bar *\/$/;"	v
topbar	dwm.c	/^	int topbar;$/;"	m	struct:Bar	file:
topbar	dwm.c	/^	int topbar;$/;"	m	struct:__anon16	file:
transcheme	drw.c	/^Clr transcheme[3];$/;"	v
transfer	patch/transfer.c	/^transfer(const Arg *arg)$/;"	f
transferall	patch/transferall.c	/^transferall(const Arg *arg)$/;"	f
type	patch/ipc/dwm-msg.c	/^  uint8_t type;$/;"	m	struct:dwm_ipc_header	file:
type	patch/ipc/ipc.h	/^  uint8_t type;$/;"	m	struct:dwm_ipc_header
ui	dwm.c	/^	unsigned long ui;$/;"	m	union:__anon7	file:
unfloatvisible	patch/unfloatvisible.c	/^unfloatvisible(const Arg *arg)$/;"	f
unfocus	dwm.c	/^unfocus(Client *c, int setfocus, Client *nextfocus)$/;"	f
unmanage	dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f
unmanagealtbar	patch/bar_anybar.c	/^unmanagealtbar(Window w)$/;"	f
unmapnotify	dwm.c	/^unmapnotify(XEvent *e)$/;"	f
unswallow	patch/swallow.c	/^unswallow(Client *c)$/;"	f
updatebarpos	dwm.c	/^updatebarpos(Monitor *m)$/;"	f
updatebars	dwm.c	/^updatebars(void)$/;"	f
updateclientlist	dwm.c	/^updateclientlist()$/;"	f
updatecurrentdesktop	patch/bar_ewmhtags.c	/^updatecurrentdesktop(void)$/;"	f
updategeom	dwm.c	/^updategeom(void)$/;"	f
updateinset	patch/insets.c	/^updateinset(const Arg *arg)$/;"	f
updatemotifhints	patch/decorationhints.c	/^updatemotifhints(Client *c)$/;"	f
updatenumlockmask	dwm.c	/^updatenumlockmask(void)$/;"	f
updatesizehints	dwm.c	/^updatesizehints(Client *c)$/;"	f
updatestatus	dwm.c	/^updatestatus(void)$/;"	f
updatesystrayicongeom	patch/bar_systray.c	/^updatesystrayicongeom(Client *i, int w, int h)$/;"	f
updatesystrayiconstate	patch/bar_systray.c	/^updatesystrayiconstate(Client *i, XPropertyEvent *ev)$/;"	f
updatetitle	dwm.c	/^updatetitle(Client *c)$/;"	f
updatewmhints	dwm.c	/^updatewmhints(Client *c)$/;"	f
urgbgcolor	config.def.h	/^static char			urgbgcolor[]		= "#FF7000"; \/* Urgent Tag Background colour *\/$/;"	v
urgbgcolor	config.h	/^static char			urgbgcolor[]		= "#FF7000"; \/* Urgent Tag Background colour *\/$/;"	v
urgbordercolor	config.def.h	/^static char			urgbordercolor[]	= "#FF7000"; \/* urgent window border colour *\/$/;"	v
urgbordercolor	config.h	/^static char			urgbordercolor[]	= "#FF7000"; \/* urgent window border colour *\/$/;"	v
urgent	dwm.c	/^       int urgent;$/;"	m	struct:TagState	file:
urgfgcolor	config.def.h	/^static char			urgfgcolor[]		= "#FFFFFF"; \/* Urgent Tag Foreground colour *\/$/;"	v
urgfgcolor	config.h	/^static char			urgfgcolor[]		= "#FFFFFF"; \/* Urgent Tag Foreground colour *\/$/;"	v
urgfloatcolor	config.def.h	/^static char			urgfloatcolor[]		= "#FF7070"; \/* urgent FLOATING window border colour *\/$/;"	v
urgfloatcolor	config.h	/^static char			urgfloatcolor[]		= "#FF7070"; \/* urgent FLOATING window border colour *\/$/;"	v
usage_error	patch/ipc/dwm-msg.c	/^usage_error(const char *prog_name, const char *format, ...)$/;"	f	file:
useargb	patch/bar_alpha.c	/^static int useargb = 0;$/;"	v	file:
utf8decode	drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	file:
utf8decodebyte	drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	file:
utf8validate	drw.c	/^utf8validate(long *u, size_t i)$/;"	f	file:
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	file:
v	dwm.c	/^	const void *v;$/;"	m	union:__anon7	file:
view	dwm.c	/^view(const Arg *arg)$/;"	f
viewallex	patch/dwmc.c	/^viewallex(const Arg *arg)$/;"	f
viewex	patch/dwmc.c	/^viewex(const Arg *arg)$/;"	f
viewtoleft	patch/focusadjacenttag.c	/^viewtoleft(const Arg *arg)$/;"	f
viewtoright	patch/focusadjacenttag.c	/^viewtoright(const Arg *arg)$/;"	f
visual	drw.h	/^	Visual *visual;$/;"	m	struct:__anon34
visual	patch/bar_alpha.c	/^static Visual *visual;$/;"	v	file:
w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon34
w	dwm.c	/^	int w;$/;"	m	struct:__anon14	file:
w	dwm.c	/^	int w;$/;"	m	struct:__anon8	file:
w	dwm.c	/^	int w[BARRULES]; \/\/ width, array length == barrules, then use r index for lookup purposes$/;"	m	struct:Bar	file:
w	dwm.c	/^	int x, w; \/\/ position, width for internal use$/;"	m	struct:__anon9	file:
w	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	file:
warp	patch/warp.c	/^warp(const Client *c)$/;"	f
wasfloating	dwm.c	/^	int ismax, wasfloating;$/;"	m	struct:Client	file:
wasfloating	dwm.c	/^	int wasfloating;$/;"	m	struct:Client	file:
wh	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	file:
width_awesomebar	patch/bar_awesomebar.c	/^width_awesomebar(Bar *bar, BarArg *a)$/;"	f
width_bartabgroups	patch/bar_tabgroups.c	/^width_bartabgroups(Bar *bar, BarArg *a)$/;"	f
width_fancybar	patch/bar_fancybar.c	/^width_fancybar(Bar *bar, BarArg *a)$/;"	f
width_flexwintitle	patch/bar_flexwintitle.c	/^width_flexwintitle(Bar *bar, BarArg *a)$/;"	f
width_ltsymbol	patch/bar_ltsymbol.c	/^width_ltsymbol(Bar *bar, BarArg *a)$/;"	f
width_pwrl_status	patch/bar_powerline_status.c	/^width_pwrl_status(Bar *bar, BarArg *a)$/;"	f
width_pwrl_status_es	patch/bar_powerline_status.c	/^width_pwrl_status_es(Bar *bar, BarArg *a)$/;"	f
width_pwrl_tags	patch/bar_powerline_tags.c	/^width_pwrl_tags(Bar *bar, BarArg *a)$/;"	f
width_status	patch/bar_status.c	/^width_status(Bar *bar, BarArg *a)$/;"	f
width_status2d	patch/bar_status2d.c	/^width_status2d(Bar *bar, BarArg *a)$/;"	f
width_status2d_es	patch/bar_status2d.c	/^width_status2d_es(Bar *bar, BarArg *a)$/;"	f
width_status_es	patch/bar_status.c	/^width_status_es(Bar *bar, BarArg *a)$/;"	f
width_stbutton	patch/bar_statusbutton.c	/^width_stbutton(Bar *bar, BarArg *a)$/;"	f
width_systray	patch/bar_systray.c	/^width_systray(Bar *bar, BarArg *a)$/;"	f
width_taggrid	patch/bar_taggrid.c	/^width_taggrid(Bar *bar, BarArg *a)$/;"	f
width_tags	patch/bar_tags.c	/^width_tags(Bar *bar, BarArg *a)$/;"	f
width_wintitle	patch/bar_wintitle.c	/^width_wintitle(Bar *bar, BarArg *a)$/;"	f
width_wintitle_floating	patch/bar_wintitle_floating.c	/^width_wintitle_floating(Bar *bar, BarArg *a)$/;"	f
width_wintitle_hidden	patch/bar_wintitle_hidden.c	/^width_wintitle_hidden(Bar *bar, BarArg *a)$/;"	f
widthfunc	dwm.c	/^	int (*widthfunc)(Bar *bar, BarArg *a);$/;"	m	struct:__anon9	file:
widthpowerlinestatus	patch/bar_powerline_status.c	/^widthpowerlinestatus(char *stext)$/;"	f
win	dwm.c	/^	Window win;$/;"	m	struct:Bar	file:
win	dwm.c	/^	Window win;$/;"	m	struct:Client	file:
win	patch/bar_systray.h	/^	Window win;$/;"	m	struct:Systray
winpid	patch/swallow.c	/^winpid(Window w)$/;"	f
wintoclient	dwm.c	/^wintoclient(Window w)$/;"	f
wintomon	dwm.c	/^wintomon(Window w)$/;"	f
wintosystrayicon	patch/bar_systray.c	/^wintosystrayicon(Window w)$/;"	f
wintype	dwm.c	/^	const char *wintype;$/;"	m	struct:__anon15	file:
winview	patch/winview.c	/^winview(const Arg* arg)$/;"	f
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];$/;"	v	file:
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	file:
wmclasscontains	patch/bar_anybar.c	/^wmclasscontains(Window win, const char *class, const char *name)$/;"	f
write_socket	patch/ipc/dwm-msg.c	/^write_socket(const void *buf, size_t count)$/;"	f	file:
ww	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	file:
wx	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	file:
wy	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	file:
x	dwm.c	/^	int x, w; \/\/ position, width for internal use$/;"	m	struct:__anon9	file:
x	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	file:
x	dwm.c	/^	int x;$/;"	m	struct:__anon14	file:
x	dwm.c	/^	int x;$/;"	m	struct:__anon8	file:
x	dwm.c	/^	int x[BARRULES]; \/\/ x position, array length == ^$/;"	m	struct:Bar	file:
xatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];$/;"	v	file:
xcon	patch/swallow.c	/^static xcb_connection_t *xcon;$/;"	v	file:
xerror	dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f
xerrordummy	dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f
xerrorstart	dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	file:
xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname)$/;"	f	file:
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	file:
xfont_free	drw.c	/^xfont_free(Fnt *font)$/;"	f	file:
xinitvisual	patch/bar_alpha.c	/^xinitvisual()$/;"	f
xrdb	patch/xrdb.c	/^xrdb(const Arg *arg)$/;"	f
y	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	file:
y	dwm.c	/^	int y;$/;"	m	struct:__anon14	file:
y	dwm.c	/^	int y;$/;"	m	struct:__anon8	file:
zoom	dwm.c	/^zoom(const Arg *arg)$/;"	f
